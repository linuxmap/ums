#=====================================================================
# 说明：本makefile用来编译linux版本的kdvmt linux 应用程序
#---------------------------------------------------------------------

#[指定当前路径为工作路径]
#---------------------------------------------------------------------
WORKSPACE  := $(shell pwd)

#[编译器选择]
#---------------------------------------------------------------------
BDW_CC     := /opt/ppc_nofpu/bin/ppc_85xx-gcc
BDW_CC_PLUS:= /opt/ppc_nofpu/bin/ppc_85xx-g++
BDW_AR     := /opt/ppc_nofpu/bin/ppc_85xx-ar

#[主编译选项，含宏定义、头文件路径]
#---------------------------------------------------------------------
BDW_CFLAGS := -fno-omit-frame-pointer -v -D_LINUX_ -D_PPC_85XX_ -DRV_DEBUG -DNOTHREADS -DRTP_NOLOCKS -D__REDHAT__ -DARCH=PPC\
              -static \
              -DBIG_ENDIAN -DEMBED_REC \
              -I$(WORKSPACE)/../include \
              -I$(WORKSPACE)/../../../10-common/include/platform \
              -I$(WORKSPACE)/../../../10-common/include/system1 \
              -I$(WORKSPACE)/../../../10-common/include/tp \
      				-I$(WORKSPACE)/../../../10-common/include/protocol\
      				-I$(WORKSPACE)/../../../10-common/include/protocol/tp\
      				-I$(WORKSPACE)/../../../10-common/include/protocol/sipstack\
      				-I$(WORKSPACE)/../../common/tp

#[编译的源文件和生成的目标文件的依赖关系]
#---------------------------------------------------------------------
PRJ_FILES:= $(wildcard $(WORKSPACE)/../source/*.cpp )

PRJ_OBJS := $(PRJ_FILES:$(WORKSPACE)/../source/%.cpp=$(WORKSPACE)/%.o)

#[依赖的库的名字和路径指定]:
#---------------------------------------------------------------------
DEBUG_LIB_PATH   := -L$(WORKSPACE)/../../../10-common/lib/debug/linux_ppc_85xx

RELEASE_LIB_PATH := -L$(WORKSPACE)/../../../10-common/lib/release/linux_ppc_85xx\
		    -L$(WORKSPACE)/../../../10-common/lib/release/linux_ppc_85xx/nip\
		    -L$(WORKSPACE)/../../../10-common/lib/release/linux_ppc_85xx/nipdebug
 
APP_NAME         := devmgrservice
PRJ_LIBS         := -lumsapi \
		    -lumsmsg       \
		    -ltpmsgmgr   \
		    -lkdvlog       \
		    -lxmlengine  \
			-ltinyxml \
        -lkdvsys \
        -losp  \
        -lrt   \
        -lnipwrapper \
        -lbrdwrapper \
		-lppc_85xx_nand_nip_api \
        -lpthread                    
        
all:	debug release

debug:
	cd $(WORKSPACE);         rm -f *.o; rm -f $(APP_NAME)
	$(BDW_CC_PLUS) $(BDW_CFLAGS) -g $(PRJ_FILES) $(PRJ_LIBS) $(DEBUG_LIB_PATH) -o $(APP_NAME)
	cp -f $(APP_NAME) $(WORKSPACE)/../../../10-common/version/debug/linux_ppc_85xx/$(APP_NAME)

release:
	cd $(WORKSPACE);         rm -f *.o; rm -f $(APP_NAME)
	$(BDW_CC_PLUS) $(BDW_CFLAGS) -O2 $(PRJ_FILES) $(PRJ_LIBS) $(RELEASE_LIB_PATH) -o $(APP_NAME)
	cp -f $(APP_NAME) $(WORKSPACE)/../../../10-common/version/release/linux_ppc_85xx/$(APP_NAME)

clean:
	cd $(WORKSPACE);         rm -f *.o; rm -f $(APP_NAME)
