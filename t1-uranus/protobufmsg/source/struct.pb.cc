// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struct.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "struct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pbmsg {

namespace {

const ::google::protobuf::Descriptor* TViewReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TViewReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_struct_2eproto() {
  protobuf_AddDesc_struct_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "struct.proto");
  GOOGLE_CHECK(file != NULL);
  TViewReq_descriptor_ = file->message_type(0);
  static const int TViewReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, wconfid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, wsrcepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, wsrcscreenindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, wdstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, wdstscreenindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, emviewtype_),
  };
  TViewReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TViewReq_descriptor_,
      TViewReq::default_instance_,
      TViewReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TViewReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TViewReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_struct_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TViewReq_descriptor_, &TViewReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_struct_2eproto() {
  delete TViewReq::default_instance_;
  delete TViewReq_reflection_;
}

void protobuf_AddDesc_struct_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pbmsg::protobuf_AddDesc_base_2eproto();
  ::pbmsg::protobuf_AddDesc_enum_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014struct.proto\022\005pbmsg\032\nbase.proto\032\nenum."
    "proto\"\230\001\n\010TViewReq\022\017\n\007wConfId\030\001 \001(\r\022\020\n\010w"
    "SrcEpId\030\002 \001(\r\022\027\n\017wSrcScreenIndex\030\003 \001(\r\022\020"
    "\n\010wDstEpId\030\004 \001(\r\022\027\n\017wDstScreenIndex\030\005 \001("
    "\r\022%\n\nemViewType\030\006 \001(\0162\021.pbmsg.EmViewType", 200);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "struct.proto", &protobuf_RegisterTypes);
  TViewReq::default_instance_ = new TViewReq();
  TViewReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_struct_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_struct_2eproto {
  StaticDescriptorInitializer_struct_2eproto() {
    protobuf_AddDesc_struct_2eproto();
  }
} static_descriptor_initializer_struct_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TViewReq::kWConfIdFieldNumber;
const int TViewReq::kWSrcEpIdFieldNumber;
const int TViewReq::kWSrcScreenIndexFieldNumber;
const int TViewReq::kWDstEpIdFieldNumber;
const int TViewReq::kWDstScreenIndexFieldNumber;
const int TViewReq::kEmViewTypeFieldNumber;
#endif  // !_MSC_VER

TViewReq::TViewReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TViewReq::InitAsDefaultInstance() {
}

TViewReq::TViewReq(const TViewReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TViewReq::SharedCtor() {
  _cached_size_ = 0;
  wconfid_ = 0u;
  wsrcepid_ = 0u;
  wsrcscreenindex_ = 0u;
  wdstepid_ = 0u;
  wdstscreenindex_ = 0u;
  emviewtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TViewReq::~TViewReq() {
  SharedDtor();
}

void TViewReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TViewReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TViewReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TViewReq_descriptor_;
}

const TViewReq& TViewReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_struct_2eproto();
  return *default_instance_;
}

TViewReq* TViewReq::default_instance_ = NULL;

TViewReq* TViewReq::New() const {
  return new TViewReq;
}

void TViewReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wconfid_ = 0u;
    wsrcepid_ = 0u;
    wsrcscreenindex_ = 0u;
    wdstepid_ = 0u;
    wdstscreenindex_ = 0u;
    emviewtype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TViewReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 wConfId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wconfid_)));
          set_has_wconfid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_wSrcEpId;
        break;
      }

      // optional uint32 wSrcEpId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wSrcEpId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wsrcepid_)));
          set_has_wsrcepid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_wSrcScreenIndex;
        break;
      }

      // optional uint32 wSrcScreenIndex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wSrcScreenIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wsrcscreenindex_)));
          set_has_wsrcscreenindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_wDstEpId;
        break;
      }

      // optional uint32 wDstEpId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wDstEpId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wdstepid_)));
          set_has_wdstepid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_wDstScreenIndex;
        break;
      }

      // optional uint32 wDstScreenIndex = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wDstScreenIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wdstscreenindex_)));
          set_has_wdstscreenindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_emViewType;
        break;
      }

      // optional .pbmsg.EmViewType emViewType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_emViewType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pbmsg::EmViewType_IsValid(value)) {
            set_emviewtype(static_cast< ::pbmsg::EmViewType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TViewReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 wConfId = 1;
  if (has_wconfid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wconfid(), output);
  }

  // optional uint32 wSrcEpId = 2;
  if (has_wsrcepid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wsrcepid(), output);
  }

  // optional uint32 wSrcScreenIndex = 3;
  if (has_wsrcscreenindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->wsrcscreenindex(), output);
  }

  // optional uint32 wDstEpId = 4;
  if (has_wdstepid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->wdstepid(), output);
  }

  // optional uint32 wDstScreenIndex = 5;
  if (has_wdstscreenindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wdstscreenindex(), output);
  }

  // optional .pbmsg.EmViewType emViewType = 6;
  if (has_emviewtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->emviewtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TViewReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 wConfId = 1;
  if (has_wconfid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wconfid(), target);
  }

  // optional uint32 wSrcEpId = 2;
  if (has_wsrcepid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wsrcepid(), target);
  }

  // optional uint32 wSrcScreenIndex = 3;
  if (has_wsrcscreenindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->wsrcscreenindex(), target);
  }

  // optional uint32 wDstEpId = 4;
  if (has_wdstepid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->wdstepid(), target);
  }

  // optional uint32 wDstScreenIndex = 5;
  if (has_wdstscreenindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wdstscreenindex(), target);
  }

  // optional .pbmsg.EmViewType emViewType = 6;
  if (has_emviewtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->emviewtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TViewReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 wConfId = 1;
    if (has_wconfid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wconfid());
    }

    // optional uint32 wSrcEpId = 2;
    if (has_wsrcepid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wsrcepid());
    }

    // optional uint32 wSrcScreenIndex = 3;
    if (has_wsrcscreenindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wsrcscreenindex());
    }

    // optional uint32 wDstEpId = 4;
    if (has_wdstepid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wdstepid());
    }

    // optional uint32 wDstScreenIndex = 5;
    if (has_wdstscreenindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wdstscreenindex());
    }

    // optional .pbmsg.EmViewType emViewType = 6;
    if (has_emviewtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->emviewtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TViewReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TViewReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TViewReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TViewReq::MergeFrom(const TViewReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wconfid()) {
      set_wconfid(from.wconfid());
    }
    if (from.has_wsrcepid()) {
      set_wsrcepid(from.wsrcepid());
    }
    if (from.has_wsrcscreenindex()) {
      set_wsrcscreenindex(from.wsrcscreenindex());
    }
    if (from.has_wdstepid()) {
      set_wdstepid(from.wdstepid());
    }
    if (from.has_wdstscreenindex()) {
      set_wdstscreenindex(from.wdstscreenindex());
    }
    if (from.has_emviewtype()) {
      set_emviewtype(from.emviewtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TViewReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TViewReq::CopyFrom(const TViewReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TViewReq::IsInitialized() const {

  return true;
}

void TViewReq::Swap(TViewReq* other) {
  if (other != this) {
    std::swap(wconfid_, other->wconfid_);
    std::swap(wsrcepid_, other->wsrcepid_);
    std::swap(wsrcscreenindex_, other->wsrcscreenindex_);
    std::swap(wdstepid_, other->wdstepid_);
    std::swap(wdstscreenindex_, other->wdstscreenindex_);
    std::swap(emviewtype_, other->emviewtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TViewReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TViewReq_descriptor_;
  metadata.reflection = TViewReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmsg

// @@protoc_insertion_point(global_scope)
