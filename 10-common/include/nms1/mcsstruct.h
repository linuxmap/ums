/*=============================================================================
模   块   名: 会议控制台业务功能库
文   件   名: mcsstruct.h
相 关  文 件: mcsstruct.cpp
文件实现功能: mcslib中基本数据结构
作        者: 王昊
版        本: V4.0  Copyright(C) 2003-2005 KDC, All rights reserved.
-------------------------------------------------------------------------------
修改记录:
日      期  版本    修改人      修改内容
2005/04/27  4.0     王昊        创建
=============================================================================*/


#ifndef _MCSSTRUCT_20050422_H_
#define _MCSSTRUCT_20050422_H_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include "mcustruct.h"
#include "vcsstruct.h"
#include "mcsconst.h"
#include "nmscommon.h"
#include "ummessagestruct.h"
#include <vector>
using namespace std;



/*************************************
************************************/

//发送给上层的消息结构，在消息的WPARAM是指向此结构的指针
typedef struct tagMcsParam
{
    tagMcsParam() : m_pbyMsgBody(NULL), m_nMsgBodySize(0), m_dwErrorCode(0),
                    m_bSelfProduce(FALSE) {}
    u8      *m_pbyMsgBody;          //消息体
    s32     m_nMsgBodySize;         //消息体长度
    u32     m_dwErrorCode;          //错误码
    BOOL32  m_bSelfProduce;         //是否由此会控引起的消息(应该没什么用)
} TMcsParam;

//监控参数结构
typedef struct tagMonitorParam : public TMt
{
    tagMonitorParam()
    {
        ZeroMemory( this, sizeof (tagMonitorParam) );
    }
    u32             m_dwLocalIp;        //  本机IP
    TMt             m_tVideoMt;         //  监控视频源
    TMt             m_tAudioMt;         //  监控音频源
    u16             m_wLocalPort;       //  接收码流端口
    u8              m_byReal;           //  0-抽帧监控, 1-实时监控
    u8              m_byQuiet;          //  0-不静音, 1-静音
    u8              m_byMode;           //  MODE_BOTH/MODE_VIDEO/MODE_AUDIO
    u8              m_byReserved;       //  保留字段
    CConfId         m_cConfId;          //  会议号
    TMediaEncrypt   m_tVideoMedia;      //  视频加密
    TDoublePayload  m_tVideoPayload;    //  视频载荷
    TMediaEncrypt   m_tAudioMedia;      //  音频加密
    TDoublePayload  m_tAudioPayload;    //  音频载荷
    TAudAACCap      m_tAudAACCap;       //  AAC的参数
	TTransportAddr  m_tVideoTransportAddr;   //  视屏RCTP端口和IP
	TTransportAddr  m_tAudioTransportAddr;   //  音频RCTP端口和IP
} TMonitorParam;

//切换监控窗口信息
typedef struct tagSwitchMonitor : public TMt
{
    tagSwitchMonitor()
    {
        ZeroMemory( this, sizeof (tagSwitchMonitor) );
    }

    u8      m_byIndex;
    u8      m_byReal;
    u8      m_byQuiet;
    u8      m_byMode;
    CConfId m_cConfId;          //  会议号
} TSwitchMonitor;

//录像文件列表结构
typedef struct tagRecFileInfo
{
public:
    /*=============================================================================
    函 数 名:tagFileInfo
    功    能:构造函数
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/30  4.0     王昊    创建
    =============================================================================*/
    tagRecFileInfo() { Reset(); }

    /*=============================================================================
    函 数 名:GetFileNum
    功    能:获取文件总数
    参    数:无
    注    意:无
    返 回 值:文件数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/30  4.0     王昊    创建
    =============================================================================*/
    s32 inline GetFileNum(void) const { return m_nFileNum; }

    /*=============================================================================
    函 数 名:IsPublic
    功    能:判断指定序号的文件是否发布
    参    数:s32 nIndex                     [in]    文件序号
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/30  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsPublic(s32 nIndex) const;

    /*=============================================================================
    函 数 名:Reset
    功    能:重置录像机
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/30  4.0     王昊    创建
    =============================================================================*/
    void Reset(void);

    /*=============================================================================
    函 数 名:AddFileName
    功    能:增加文件
    参    数:LPCTSTR pszFileName            [in]    文件名
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/30  4.0     王昊    创建
    =============================================================================*/
    BOOL32 AddFileName(LPCTSTR pszFileName);

    /*=============================================================================
    函 数 名:DelFileName
    功    能:删除录像文件时更新文件列表
    参    数:LPCTSTR pszFileName            [in]    文件名
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    BOOL32 DelFileName(LPCTSTR pszFileName);

    /*=============================================================================
    函 数 名:Public
    功    能:设置指定序号的文发布
    参    数:s32 nIndex                     [in]    文件序号
             BOOL32 bPublic                 [in]    是否发布
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    BOOL32 Public(s32 nIndex, BOOL32 bPublic);

public:
    TEqp    m_tRecEqp;                                              //  录像机
    TCHAR   m_aaszFileArray[MAX_FILE_NUM][MAXLEN_REC_FILE_NAME];    //  文件名数组

private:
    s32     m_nFileNum;                                             //  文件数
    u8      m_abyStatus[MAX_FILE_NUM];                              //  文件发布方式数组
} TRecFileInfo;

//TMcuExt继承至TMcu, 记录MCU信息
typedef struct tagMcuExt : public TMcu
{
    tagMcuExt() : m_byCpuUsage(0) {}

    /*=============================================================================
    函 数 名:Print
    功    能:在telnet里打印调试信息
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/09/01  4.0     王昊    创建
    =============================================================================*/
    void Print(void);

    TMtAlias            m_tMcuAlias;        //  MCU别名
    TMcuStatus          m_tMcuStatus;       //  MCU状态
    u8                  m_byCpuUsage;       //  CPU使用率(0-100)
} TMcuExt;

//CGetName 获取终端厂商名
class CGetName
{
public:

    enum
    {
        TYPE_NULL = 0,
        MT_MANUFACTURE,             //  终端的生产厂家
        BAS_CHANNEL_STATUS,         //  适配器通道状态
        BAS_VIDEO_TYPE,             //  适配器通道视频类型
        BAS_AUDIO_TYPE,             //  适配器通道音频类型
    };

    /*=============================================================================
    函 数 名:GetName
    功    能:得到某一参数所对应的描述
    参    数:u8 byValue                         [in]    要取的参数值
             u8 byType                          [in]    参数的类型
    注    意:无
    返 回 值:描述字符串
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    static CString GetName(u8 byValue, u8 byType);

private:
    /*=============================================================================
    函 数 名:GetMtManu
    功    能:得到终端的生产厂家名称
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    static void GetMtManu(void);

    /*=============================================================================
    函 数 名:GetBasChannelStatus
    功    能:得到适配器通道状态
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    static void GetBasChannelStatus(void);

    /*=============================================================================
    函 数 名:GetBasVideoType
    功    能:得到适配器通道视频类型
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    static void GetBasVideoType(void);

    /*=============================================================================
    函 数 名:GetBasAudioType
    功    能:得到适配器通道音频类型
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    static void GetBasAudioType(void);

private:
    static u8       s_byType;           //  参数的类型
    static u8       s_byValue;          //  参数的值
    static CString  s_cstrValueName;    //  参数的名称
};

//CMtUtility是终端基本操作类
class CMtUtility
{
public:
    // Mt标识字节排列为
    // High |   BYTE   |   BYTE  | Low
    //      |   McuID  |   MtID  |

    /*=============================================================================
    函 数 名:GetMcuId
    功    能:根据u16得到McuID
    参    数:u16 wID                            [in]    u16
    注    意:无
    返 回 值:McuID
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    static inline u8 GetMcuId(u16 wID);

    /*=============================================================================
    函 数 名:GetMtId
    功    能:根据u16得到MtID
    参    数:u16 wID                            [in]    u16
    注    意:无
    返 回 值:MtID
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    static inline u8 GetMtId(u16 wID);

    /*=============================================================================
    函 数 名:GetwID
    功    能:将TMt转化为u16
    参    数:const TMt &tMt                     [in]    TMt
    注    意:无
    返 回 值:终端标识号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    static inline u16 GetwID(const TMt &tMt);

    /*=============================================================================
    函 数 名:GetwID
    功    能:将McuID和MtID组合转化为u16
    参    数:u8 byMcuId                         [in]    McuID
             u8 byMtId                          [in]    MtID
    注    意:无
    返 回 值:终端标识号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
	static inline u16 GetwID(u8 byMcuId, u8 byMtId);

    /*=============================================================================
    函 数 名:IsMcu
    功    能:判断终端是否是MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    static inline BOOL32 IsMcu(const TMt &tMt);

    /*=============================================================================
    函 数 名:IsSMcu
    功    能:判断终端是否是下级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    static inline BOOL32 IsSMcu(const TMt &tMt);

    /*=============================================================================
    函 数 名:IsMMcu
    功    能:判断终端是否是上级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    static inline BOOL32 IsMMcu(const TMt &tMt);

    /*=============================================================================
    函 数 名:IsLocalMcu
    功    能:判断终端是否是本级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/13  4.0     王昊    创建
    =============================================================================*/
    static inline BOOL32 IsLocalMcu(const TMt &tMt);
	/*=============================================================================
    函 数 名:IsSMt
    功    能:判断终端是否是下级MCU上的终端
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/05/29  4.0     刘瑞飞   创建
    =============================================================================*/
	static inline BOOL32 IsSMt( const TMt &tMt, const TMt &tMMcu );
    /*=============================================================================
    函 数 名:IsMMt
    功    能:判断终端是否是上级MCU上的终端
    参    数:const TMt &tMt                     [in]    终端
			 const TMt &tMMcu					[in]	上级Mcu
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/05/29  4.0     刘瑞飞   创建
    =============================================================================*/
	static inline BOOL32 IsMMt( const TMt &tMt, const TMt &tMMcu );
};

//CBrdCfg继承自TBrdCfgInfo, 记录单板及其配置外设
class CBrdCfg : public TBrdCfgInfo
{
public:
    CBrdCfg() : m_byEqpExist(0) {}
    ~CBrdCfg() {}

public:
    #define MIXER_MASK          (u32)0x01
    #define TVWALL_MASK         (u32)0x02
    #define ADAPTER_MASK        (u32)0x04
    #define VMP_MASK            (u32)0x08
    #define PRS_MASK            (u32)0x10
    #define MULTITVWALL_MASK    (u32)0x20
    #define REC_MASK            (u32)0x40        //  界面专用
    #define MDSC_MP_MASK        (u32)0x80        //  以下为8000B DSC模块
    #define MDSC_MTADP_MASK     (u32)0x100
    #define MDSC_GK_MASK        (u32)0x200
    #define MDSC_PROXY_MASK     (u32)0x400
    #define MDSC_DCS_MASK       (u32)0x800
    #define HD_BAS_MASK         (u32)0x1000
    #define MPUSVMP_MASK        (u32)0x2000       //  以下为MPU工作模块 xts20081215
    #define MPUDVMP_MASK        (u32)0x4000
    #define MPUBAS_MASK         (u32)0x8000
    #define MPUEVPU_MASK        (u32)0x10000
    #define MPUEBAP_MASK        (u32)0x20000
    #define TVSHDU_MASK         (u32)0x40000
 
public:
    /*=============================================================================
    函 数 名:operator TBrdCfgInfo
    功    能:类型强转
    参    数:无
    注    意:无
    返 回 值:TBrdCfgInfo
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/09/01  4.0     王昊    创建
    =============================================================================*/
    inline operator TBrdCfgInfo(void) { return dynamic_cast<TBrdCfgInfo&>(*this); }

    /*=============================================================================
    函 数 名:operator=
    功    能:赋值操作符
    参    数:无
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/09/01  4.0     王昊    创建
    =============================================================================*/
    inline CBrdCfg& operator=(const TBrdCfgInfo &tBrdCfg);

    /*=============================================================================
    函 数 名:HasMixer
    功    能:该单板是否含有混音器
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    BOOL32 HasMixer(void) const { return ( ( m_byEqpExist & MIXER_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasTvWall
    功    能:该单板是否含有电视墙
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    BOOL32 HasTvWall(void) const { return ( ( m_byEqpExist & TVWALL_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasAdapter
    功    能:该单板是否含有码流适配器
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    BOOL32 HasAdapter(void) const { return ( ( m_byEqpExist & ADAPTER_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasVmp
    功    能:该单板是否含有画面合成器
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    BOOL32 HasVmp(void) const { return ( ( m_byEqpExist & VMP_MASK ) > 0); }
//xts20081216
    /*=============================================================================
    函 数 名:HasMpuSvmp
    功    能:该单板是否含有单vmp模式
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    BOOL32 HasMpuSvmp(void) const { return ( ( m_byEqpExist & MPUSVMP_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasMpuDvmp
    功    能:该单板是否含有双vmp模式
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    BOOL32 HasMpuDvmp(void) const { return ( ( m_byEqpExist & MPUDVMP_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasMpuBas
    功    能:该单板是否含有BAS模式
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    BOOL32 HasMpuBas(void) const { return ( ( m_byEqpExist & MPUBAS_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasMpuEvpu
    功    能:该单板是否含有EVPU模式
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    BOOL32 HasMpuEvpu(void) const { return ( ( m_byEqpExist & MPUEVPU_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasMpuEbap
    功    能:该单板是否含有EBAP模式
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    BOOL32 HasMpuEbap(void) const { return ( ( m_byEqpExist & MPUEBAP_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasMpuHdu
    功    能:该单板是否含有HDU模式
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    BOOL32 HasMpuHdu(void) const { return ( ( m_byEqpExist & TVSHDU_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasPrs
    功    能:该单板是否含有丢包重传器
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    BOOL32 HasPrs(void) const { return ( ( m_byEqpExist & PRS_MASK ) > 0); }

    /*=============================================================================
    函 数 名:HasMultiTvWall
    功    能:该单板是否含有多画面电视墙
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/10/19  4.0     王昊    创建
    =============================================================================*/
    BOOL32 HasMultiTvWall(void) const
    { return ( ( m_byEqpExist & MULTITVWALL_MASK ) > 0); }

    /*=============================================================================
    函 数 名:SetMixer
    功    能:设置混音器配置
    参    数:TEqpMixerCfgInfo &tMixerCfg        [in]    混音器配置
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    void SetMixer( TEqpMixerCfgInfo &tMixerCfg )
    { m_byEqpExist |= MIXER_MASK; m_tMixerCfg = tMixerCfg; }

    /*=============================================================================
    函 数 名:SetTvWall
    功    能:设置电视墙配置
    参    数:TEqpTvWallCfgInfo &tTvWallCfg      [in]    电视墙配置
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    void SetTvWall( TEqpTvWallCfgInfo &tTvWallCfg )
    { m_byEqpExist |= TVWALL_MASK; m_tTvWallCfg = tTvWallCfg; }

    /*=============================================================================
    函 数 名:SetAdapter
    功    能:设置码流适配器配置
    参    数:TEqpBasCfgInfo &tAdapterCfg        [in]    码流适配器配置
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    void SetAdapter( TEqpBasCfgInfo &tAdapterCfg )
    { m_byEqpExist |= ADAPTER_MASK; m_tAdapterCfg = tAdapterCfg; }

    /*=============================================================================
    函 数 名:SetVmp
    功    能:设置画面合成器配置
    参    数:TEqpVmpCfgInfo &tVmpCfg            [in]    画面合成器配置
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    void SetVmp( TEqpVmpCfgInfo &tVmpCfg )
    { m_byEqpExist |= VMP_MASK; m_tVmpCfg = tVmpCfg; }

//xts20081216
    /*=============================================================================
    函 数 名:SetSvmp
    功    能:设置单vmp模式
    参    数:TEqpSvmpCfgInfo &tVmpCfg            [in]    单vmp模式
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    void SetSvmp( TEqpSvmpCfgInfo &tVmpCfg )
    { m_byEqpExist |= MPUSVMP_MASK; m_tSvmpCfg = tVmpCfg; }
    /*=============================================================================
    函 数 名:SetDvmp
    功    能:设置双vmp模式
    参    数:TEqpDvmpCfgInfo &tVmpCfg            [in]    双vmp模式
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    void SetDvmp( TEqpDvmpCfgInfo &tVmpCfg )
    { m_byEqpExist |= MPUDVMP_MASK; m_tDvmpCfg = tVmpCfg; }
    /*=============================================================================
    函 数 名:SetMpuBas
    功    能:设置MPUBAS模式
    参    数:TEqpMpuBasCfgInfo &tVmpCfg            [in]    MPUBAS模式
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    void SetMpuBas( TEqpMpuBasCfgInfo &tVmpCfg )
    { m_byEqpExist |= MPUBAS_MASK; m_tMpuBasCfg = tVmpCfg; }
    /*=============================================================================
    函 数 名:SetEvpu
    功    能:设置EVPU模式
    参    数:TEqpEvpuCfgInfo &tVmpCfg            [in]    EVPU模式
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    void SetEvpu( TEqpEvpuCfgInfo &tVmpCfg )
    { m_byEqpExist |= MPUEVPU_MASK; m_tEvpuCfg = tVmpCfg; }
    /*=============================================================================
    函 数 名:SetEbap
    功    能:设置EBAP模式
    参    数:TEqpEbapCfgInfo &tVmpCfg            [in]    EBAP模式
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    void SetEbap( TEqpEbapCfgInfo &tVmpCfg )
    { m_byEqpExist |= MPUEBAP_MASK; m_tEbapCfg = tVmpCfg; }

    /*=============================================================================
    函 数 名:SetEbap
    功    能:设置EBAP模式
    参    数:TEqpEbapCfgInfo &tVmpCfg            [in]    EBAP模式
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    void SetHdu( TEqpHduCfgInfo &tVmpCfg )
    { m_byEqpExist |= TVSHDU_MASK; m_tHduCfg = tVmpCfg; }

    /*=============================================================================
    函 数 名:SetPrs
    功    能:设置丢包重传器配置
    参    数:TPrsCfgInfo &tPrsCfg               [in]    丢包重传器配置
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    void SetPrs( TPrsCfgInfo &tPrsCfg )
    { m_byEqpExist |= PRS_MASK; m_tPrsCfg = tPrsCfg; }

    /*=============================================================================
    函 数 名:SetMultiTvWall
    功    能:设置多画面电视墙配置
    参    数:TEqpMTvwallCfgInfo &tMultiTvWallCfg    [in]    丢包重传器配置
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/10/19  4.0     王昊    创建
    =============================================================================*/
    void SetMultiTvWall(TEqpMTvwallCfgInfo &tMultiTvWallCfg)
    { m_byEqpExist |= MULTITVWALL_MASK; m_tMultiTvWallCfg = tMultiTvWallCfg; }

    /*=============================================================================
    函 数 名:GetMixer
    功    能:获取混音器配置
    参    数:无
    注    意:必须存在混音器
    返 回 值:混音器配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    TEqpMixerCfgInfo& GetMixer(void) { return m_tMixerCfg; }

    /*=============================================================================
    函 数 名:GetTvWall
    功    能:获取电视墙配置
    参    数:无
    注    意:必须存在电视墙
    返 回 值:电视墙配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    TEqpTvWallCfgInfo& GetTvWall(void) { return m_tTvWallCfg; }

    /*=============================================================================
    函 数 名:GetAdapter
    功    能:获取码流适配器配置
    参    数:无
    注    意:必须存在码流适配器
    返 回 值:码流适配器配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    TEqpBasCfgInfo& GetAdapter(void) { return m_tAdapterCfg; }

    /*=============================================================================
    函 数 名:GetVmp
    功    能:获取画面合成器配置
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:画面合成器配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    TEqpVmpCfgInfo& GetVmp(void) { return m_tVmpCfg; }

//xts20081216
    /*=============================================================================
    函 数 名:GetSvmp
    功    能:获取单vmp模式
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:单vmp模式配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    TEqpSvmpCfgInfo& GetSvmp(void) { return m_tSvmpCfg; }

    /*=============================================================================
    函 数 名:GetDvmp
    功    能:获取双vmp模式
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:双vmp模式配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    TEqpDvmpCfgInfo& GetDvmp(void) { return m_tDvmpCfg; }

    /*=============================================================================
    函 数 名:GetMpuBas
    功    能:获取MPUBAS模式
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:MPUBAS模式配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    TEqpMpuBasCfgInfo& GetMpuBas(void) { return m_tMpuBasCfg; }

    /*=============================================================================
    函 数 名:GetEvpu
    功    能:获取EVPU模式
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:EVPU模式配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    TEqpEvpuCfgInfo& GetEvpu(void) { return m_tEvpuCfg; }

    /*=============================================================================
    函 数 名:GetEbap
    功    能:获取EBAP模式
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:EBAP模式配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    TEqpEbapCfgInfo& GetEbap(void) { return m_tEbapCfg; }

    /*=============================================================================
    函 数 名:GetHdu
    功    能:获取HDU模式
    参    数:无
    注    意:必须存在画面合成器
    返 回 值:HDU模式配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2008/12/16  4.0     徐太松    创建
    =============================================================================*/
    TEqpHduCfgInfo& GetHdu(void) { return m_tHduCfg; }

    /*=============================================================================
    函 数 名:GetPrs
    功    能:获取丢包重传器配置
    参    数:无
    注    意:必须存在丢包重传器
    返 回 值:丢包重传器配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     王昊    创建
    =============================================================================*/
    TPrsCfgInfo& GetPrs(void) { return m_tPrsCfg; }

    /*=============================================================================
    函 数 名:GetMultiTvWall
    功    能:获取多画面电视墙配置
    参    数:无
    注    意:必须存在多画面电视墙
    返 回 值:多画面电视墙配置
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/10/19  4.0     王昊    创建
    =============================================================================*/
    TEqpMTvwallCfgInfo& GetMultiTvWall(void) { return m_tMultiTvWallCfg; }

    /*=============================================================================
    函 数 名:ClearPeriCfg
    功    能:清空一种或多种外设配置
    参    数:u8 byPeriUnion                     [in]    MIXER_MASK | TVWALL_MASK
                                                        | ADAPTER_MASK
                                                        | VMP_MASK | PRS_MASK
                                                        | MULTITVWALL_MASK
    注    意:参数由各种mask拼出来
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/09/20  4.0     王昊    创建
    =============================================================================*/
    void ClearPeriCfg( u32 byPeriUnion );

    /*=============================================================================
    函 数 名:Print
    功    能:在telnet里打印调试信息
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/09/01  4.0     王昊    创建
    =============================================================================*/
    void Print(void) const;

private:
    TEqpMixerCfgInfo    m_tMixerCfg;        //  混音器配置
    TEqpTvWallCfgInfo   m_tTvWallCfg;       //  电视墙配置
    TEqpBasCfgInfo      m_tAdapterCfg;      //  码流适配器配置
    TEqpVmpCfgInfo      m_tVmpCfg;          //  画面合成器配置
    TPrsCfgInfo         m_tPrsCfg;          //  丢包重传器配置
    TEqpMTvwallCfgInfo  m_tMultiTvWallCfg;  //  多画面电视墙
    //xts
    TEqpSvmpCfgInfo     m_tSvmpCfg;         //单vmp模式
    TEqpDvmpCfgInfo     m_tDvmpCfg;         //双vmp模式
    TEqpMpuBasCfgInfo   m_tMpuBasCfg;       //BAS模式
    TEqpEbapCfgInfo     m_tEbapCfg;         //EBAP模式
    TEqpEvpuCfgInfo     m_tEvpuCfg;         //EVPU模式
    TEqpHduCfgInfo      m_tHduCfg;         //HDU模式

    u32                  m_byEqpExist;       //  该单板上有哪些外设
};

//CMt继承至TMt，存储单个Mt的所有信息
class CMt : public TMt
{
public:
    CMt() { SetNull(); }
    CMt(const CMt &cMt);
    CMt(const TMtExt &tMtExt);
    CMt(const TMtStatus &tMtStatus);
    ~CMt() {}

    /*=============================================================================
    函 数 名:SetNull
    功    能:将终端置空
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline void SetNull(void) { ZeroMemory( this, sizeof (CMt) ); }

public:
    /*=============================================================================
    函 数 名:operator=
    功    能:全部赋值
    参    数:const CMt& cMt                     [in]    全部终端信息
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline CMt& operator=(const CMt &cMt);

    /*=============================================================================
    函 数 名:operator=
    功    能:基本结构赋值
    参    数:const TMt& tMt                     [in]    基本终端信息
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline CMt& operator=(const TMt &tMt);

    /*=============================================================================
    函 数 名:operator=
    功    能:部分结构赋值
    参    数:const TMtExt &tMtExt               [in]    部分终端信息
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline CMt& operator=(const TMtExt &tMtExt);

    /*=============================================================================
    函 数 名:operator=
    功    能:部分结构赋值
    参    数:const TMtStatus &tMtStatus         [in]    部分终端信息
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/14  4.0     王昊    创建
    =============================================================================*/
    inline CMt& operator=(const TMtStatus &tMtStatus);

    /*=============================================================================
    函 数 名:operator TMt
    功    能:转化为TMt
    参    数:无
    注    意:无
    返 回 值:const TMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline operator const TMt(void) const { return (*this); }

    /*=============================================================================
    函 数 名:operator TMt
    功    能:转化为TMt
    参    数:无
    注    意:无
    返 回 值:TMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline operator TMt(void) { return (dynamic_cast<TMt&>(*this)); }

    /*=============================================================================
    函 数 名:operator TMtExt
    功    能:转化为TMtExt
    参    数:无
    注    意:无
    返 回 值:const TMtExt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline operator const TMtExt(void) const { return m_tMtExt; }

    /*=============================================================================
    函 数 名:operator TMtExt
    功    能:转化为TMtExt
    参    数:无
    注    意:无
    返 回 值:TMtExt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline operator TMtExt(void) { return m_tMtExt; }

    /*=============================================================================
    函 数 名:operator TMtStatus
    功    能:转化为TMtStatus
    参    数:无
    注    意:无
    返 回 值:const TMtStatus
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline operator const TMtStatus(void) const { return m_tMtStatus; }

    /*=============================================================================
    函 数 名:operator TMtStatus
    功    能:转化为TMtStatus
    参    数:无
    注    意:无
    返 回 值:TMtStatus
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline operator TMtStatus(void) { return m_tMtStatus; }

    /*=============================================================================
    函 数 名:operator==
    功    能:比较操作符
    参    数:const TMtStatus &tMtStatus         [in]    TMtStatus
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/27  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 operator==(const TMtStatus &tMtStatus) const;

    /*=============================================================================
    函 数 名:operator==
    功    能:比较操作符
    参    数:const TMtExt &tMtExt               [in]    TMtExt
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/08  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 operator==(const TMtExt &tMtExt) const;

    /*=============================================================================
    函 数 名:operator==
    功    能:比较操作符
    参    数:const TMt &tMt                     [in]    TMt
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 operator==(const TMt &tMt) const;

public:
    /*=============================================================================
    函 数 名:IsNull
    功    能:判断终端是否为空
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsNull(void) const;

    /*=============================================================================
    函 数 名:GetwID
    功    能:获取16位终端标识符
    参    数:无
    注    意:无
    返 回 值:终端标识符
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline u16 GetwID(void) const;

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置TMt
    参    数:const TMt &tMt                     [in]    TMt
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    inline void SetMt(const TMt &tMt);

    /*=============================================================================
    函 数 名:SetMtStatus
    功    能:设置终端状态
    参    数:const TMtStatus &tMtStatus         [in]    终端状态
    注    意:无
    返 回 值:现有m_tMtStatus与tMtStatus不一样:TRUE; 否则:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 SetMtStatus(const TMtStatus &tMtStatus);

    /*=============================================================================
    函 数 名:SyncAliasFromExt
    功    能:从扩展结构同步终端别名
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/12/14  4.0     王昊    创建
    =============================================================================*/
    void SyncAliasFromExt(void);

    /*=============================================================================
    函 数 名:ClearMtAlias
    功    能:清空终端别名
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/12/14  4.0     王昊    创建
    =============================================================================*/
    inline void ClearMtAlias(void) { m_tMtAlias.SetNull(); }

    /*=============================================================================
    函 数 名:SetMtAlias
    功    能:设置终端别名
    参    数:const TMtAlias &tMtAlias           [in]    终端别名
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    2006/01/09  4.0     顾振华  修改
    =============================================================================*/
	void SetMtAlias(const TMtAlias &tMtAlias);

    /*=============================================================================
    函 数 名:SetRecEqp
    功    能:设置录像设备
    参    数:const TEqp &tRecEqp                [in]    录像设备
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetRecEqp(const TEqp &tRecEqp);

    /*=============================================================================
    函 数 名:SetRecProg
    功    能:设置录像进度
    参    数:const TRecProg &tRecProg           [in]    录像进度
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetRecProg(const TRecProg &tRecProg);

    /*=============================================================================
    函 数 名:GetMtAlias
    功    能:获取终端别名
    参    数:const mtAliasType &emType          [in]    别名类型
    注    意:没有该类型则返回空值
    返 回 值:TMtAlias
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    2006/01/09  4.0     顾振华  修改
    =============================================================================*/
    TMtAlias GetMtAlias(const mtAliasType &emType) const;

    /*=============================================================================
    函 数 名:GetMtAlias
    功    能:获取终端别名
    参    数:无
    注    意:H.323 ID / H.320 ID > E.164 ID > IP
    返 回 值:TMtAlias
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    2006/01/09  4.0     顾振华  修改
    =============================================================================*/
    TMtAlias GetMtAlias(void) const;

    /*=============================================================================
    函 数 名:GetMtAliasFromExt
    功    能:从扩展结构里得获取终端别名
    参    数:TMtAlias &tMtAlias                 [in]    要得的终端别名
    注    意:
    返 回 值:得到字串值返回TRUE，字串为空返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/12  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMtAliasFromExt(TMtAlias &tMtAlias) const;

    /*=============================================================================
    函 数 名:GetProtocol
    功    能:获取终端协议类型
    参    数:无
    注    意:
    返 回 值:u8 协议类型 PROTOCOL_TYPE_H323 PROTOCOL_TYPE_H320 PROTOCOL_TYPE_SIP
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/01/20  4.0     顾振华  修改
    =============================================================================*/
    inline u8 GetProtocol(void) const
    {
        return m_tMtExt.GetProtocolType();
    }

    /*=============================================================================
    函 数 名:GetProtocol
    功    能:终端是否是H320终端
    参    数:无
    注    意:
    返 回 值:TRUE 是 H320
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/01/20  4.0     顾振华  修改
    =============================================================================*/
    inline BOOL32 IsProtocolH320() const
    {
        return (GetProtocol() == PROTOCOL_TYPE_H320);
    }


    /*=============================================================================
    函 数 名:IsOnline
    功    能:终端是否在线
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsOnline(void) const;

    /*=============================================================================
    函 数 名:SetOnline
    功    能:设置是否在线
    参    数:BOOL32 bOnLine                     [in]    是否在线
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
	void SetOnline(BOOL32 bOnLine);

    /*========================================================================
	函 数 名:IsShown
	功    能:判断呼叫错误信息是否显示过
	参    数:无
	注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
	========================================================================*/
	BOOL32 IsShown(void) const;

    /*=============================================================================
    函 数 名:SetShown
    功    能:设置该呼叫错误信息是否显示过
    参    数:BOOL32 bShown                      [in]	是否显示过
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    void SetShown(BOOL32 bShown);

    /*=============================================================================
    函 数 名:GetErrorCode
    功    能:获取错误信息码
    参    数:无
    注    意:无
    返 回 值:错误信息码
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    u16 GetErrorCode(void) const { return HIWORD(m_dwOnlineStatus); }

    /*=============================================================================
    函 数 名:SetErrorCode
    功    能:设置错误信息码
    参    数:u16 wErrorCode                     [in]    错误信息码
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    void SetErrorCode(u16 wErrorCode);

    /*=============================================================================
    函 数 名:GetRecEqp
    功    能:获取录像设备
    参    数:无
    注    意:无
    返 回 值:TEqp
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    TEqp GetRecEqp(void) const { return m_tRecEqp; }

    /*=============================================================================
    函 数 名:GetRecProg
    功    能:获取录像进度
    参    数:无
    注    意:无
    返 回 值:TRecProg
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    TRecProg GetRecProg(void) const { return m_tRecProg; }

    /*=============================================================================
    函 数 名:GetMtStatus
    功    能:获取终端状态
    参    数:无
    注    意:无
    返 回 值:TMtStatus
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    TMtStatus GetMtStatus(void) const { return m_tMtStatus; }

    /*=============================================================================
    函 数 名:GetMtExt
    功    能:获取终端扩展结构
    参    数:无
    注    意:无
    返 回 值:TMtExt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/30  4.0     王昊    创建
    =============================================================================*/
    TMtExt GetMtExt(void) const { return m_tMtExt; }

    /*=============================================================================
    函 数 名:IsStatusDumb
    功    能:判断终端是否哑音
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusDumb(void) const;

    /*=============================================================================
    函 数 名:SetStatusDumb
    功    能:设置终端是否哑音
    参    数:BOOL32 bDumb                       [in]    是否哑音
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
//    void SetStatusMute(BOOL32 bDumb);

    /*=============================================================================
    函 数 名:IsStatusQuiet
    功    能:判断终端是否静音
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusQuiet(void) const;

    /*=============================================================================
    函 数 名:SetStatusQuiet
    功    能:设置终端是否静音
    参    数:BOOL32 bQuiet                      [in]    是否静音
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
//    void SetStatusQuiet(BOOL32 bQuiet);

    /*=============================================================================
    函 数 名:IsStatusInspect
    功    能:判断终端是否选看
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusInspect(void) const;

    /*=============================================================================
    函 数 名:SetStatusInspect
    功    能:设置终端是否选看
    参    数:BOOL32 bInspect                    [in]    是否选看
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
//    void SetStatusInspect(BOOL32 bInspect);

    /*=============================================================================
    函 数 名:IsStatusVmp
    功    能:判断终端是否画面合成
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusVmp(void) const;

    /*=============================================================================
    函 数 名:SetStatusVmp
    功    能:设置终端是否画面合成
    参    数:BOOL32 bVmp                        [in]    是否画面合成
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    void SetStatusVmp(BOOL32 bVmp);

    /*=============================================================================
    函 数 名:IsStatusRec
    功    能:判断终端是否录像
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusRec(void) const;

    /*=============================================================================
    函 数 名:SetStatusRec
    功    能:设置终端是否录像
    参    数:BOOL32 bRec                        [in]    是否录像
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
//    void SetStatusRec(BOOL32 bRec);

    /*=============================================================================
    函 数 名:IsStatusTvWall
    功    能:判断终端是否进入电视墙
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusTvWall(void) const;

    /*=============================================================================
    函 数 名:SetStatusTvWall
    功    能:设置终端是否进入电视墙
    参    数:BOOL32 bTvWall                     [in]    是否进入电视墙
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    void SetStatusTvWall(BOOL32 bTvWall);

    /*=============================================================================
    函 数 名:IsStatusMix
    功    能:判断终端是否混音
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusMix(void) const;

    /*=============================================================================
    函 数 名:SetStatusMix
    功    能:设置终端是否混音
    参    数:BOOL32 bMix                        [in]    是否混音
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    void SetStatusMix(BOOL32 bMix);

    /*=============================================================================
    函 数 名:IsStatusMultiTvWall
    功    能:判断终端是否进入多画面电视墙
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/10/14  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusMultiTvWall(void) const;

    /*=============================================================================
    函 数 名:SetStatusMultiTvWall
    功    能:设置终端是否进入多画面电视墙
    参    数:BOOL32 bMultiTvWall                [in]    是否进入多画面电视墙
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/10/14  4.0     王昊    创建
    =============================================================================*/
    void SetStatusMultiTvWall(BOOL32 bMultiTvWall);

    /*=============================================================================
    函 数 名:IsStatusDual
    功    能:判断终端是否发送发送双流
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/12/20  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsStatusDual(void) const;

    /*=============================================================================
    函 数 名:IsMcu
    功    能:终端是否MCU
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcu(void) const;

    /*=============================================================================
    函 数 名:IsMMcu
    功    能:终端是否上级MCU
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMMcu(void) const;

    /*=============================================================================
    函 数 名:IsSMcu
    功    能:终端是否下级MCU
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsSMcu(void) const;

    /*=============================================================================
    函 数 名:IsLocalMcu
    功    能:判断终端是否是本级MCU
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/13  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsLocalMcu(void) const;

    /*=============================================================================
    函 数 名:SetLastRateReqTime
    功    能:设置上一次发送请求所有终端码率的时间
    参    数:u32 dwTime         [in] 时间
    注    意:
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/01/20  4.0     顾振华  创建
    =============================================================================*/
    void SetLastRateReqTime(u32 dwTime) { m_dwLastRateReqTime = dwTime; }

    /*=============================================================================
    函 数 名:GetLastRateReqTime
    功    能:获取上一次发送请求所有终端码率的时间
    参    数:
    注    意:
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/01/20  4.0     顾振华  创建
    =============================================================================*/
    inline u32 GetLastRateReqTime() const { return m_dwLastRateReqTime; }

    /*=============================================================================
    函 数 名:GetMtVersion
    功    能:获取终端版本信息
    参    数:
    注    意:
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2007/12/27  4.0     王廖荣  创建
    =============================================================================*/
    inline TMtExt2 GetMtVersion() const { return m_tMtVersion; }

    /*=============================================================================
    函 数 名:SetMtVersion
    功    能:设置终端版本信息
    参    数:
    注    意:
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2007/12/27  4.0     王廖荣  创建
    =============================================================================*/
    inline void SetMtVersion( const TMtExt2 &tMtExt2 ) { m_tMtVersion = tMtExt2; }

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:在telnet里打印调试信息
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void) const;

private:
    #define MTSTATUS_QUIET_MASK         (u32)0x00000001
    #define MTSTATUS_DUMB_MASK          (u32)0x00000002
    #define MTSTATUS_INSPECT_MASK       (u32)0x00000004
    #define MTSTATUS_VMP_MASK           (u32)0x00000008
    #define MTSTATUS_REC_MASK           (u32)0x00000010
    #define MTSTATUS_TVWALL_MASK        (u32)0x00000020
    #define MTSTATUS_MIX_MASK           (u32)0x00000040
    #define MTSTATUS_MULTITVWALL_MASK   (u32)0x00000080
    #define MTSTATUS_DUAL_MASK          (u32)0x00000100

    //最低位：是否在线；次低位：是否提示过；高16位：不在线时的错误码
    #define MT_ONLINE_MASK              (u32)0x00000001
    #define MT_PROMPT_MASK              (u32)0x00000002
    #define MT_ERROR_CODE_MASK          (u32)0xFFFF0000

    //别名类型
    #define MT_ALIAS_IP                 (u8)0x01
    #define MT_ALIAS_E164               (u8)0x02
    #define MT_ALIAS_H323ID             (u8)0x04
    #define MT_ALIAS_H320ID             (u8)0x08
    #define MT_ALIAS_H320ALIAS          (u8)0x10


private:
    typedef struct tagMcsMtAlias
    {
        tagMcsMtAlias() { SetNull(); }

        inline void SetNull(void) { memset( this, 0, sizeof (tagMcsMtAlias) ); }

        u8              m_byAliasType;              //别名类型(合并字段)
        TCHAR           m_szAlias[MCS_MAXLEN_ALIAS + 1];    //H.323 ID/H.320 Alias
        TCHAR           m_szE164[MAXLEN_E164];      //E.164
        TTransportAddr  m_tIP;                      //IP
        u8              m_byLayer;                  //层号(H320终端专用)
        u8              m_bySlot;                   //槽号(H320终端专用)
        u8              m_byChnnl;                  //通道号(H320终端专用)
    } TMcsMtAlias;

    TMcsMtAlias m_tMtAlias;             //终端别名
//    TMtAlias    m_tMtAlias[3];          //  终端别名
    u32         m_dwUseStatus;          //  使用状态
    u32         m_dwOnlineStatus;       //  在线状态
    TMtExt      m_tMtExt;               //  终端扩展结构
    TMtExt2     m_tMtVersion;           //  终端版本信息等
    TMtStatus   m_tMtStatus;            //  终端状态
    TEqp        m_tRecEqp;              //  录像设备
    TRecProg    m_tRecProg;             //  录像进度

    u32         m_dwLastRateReqTime;    //  记录上一次发送请求所有终端码率的时间

public:
//#ifdef _DEBUG
    /*=============================================================================
    函 数 名:Dump
    功    能:打印本类的成员调试信息
    参    数:CDumpContext &dc                   [in]    打印头
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/25  4.0     王昊    创建
    =============================================================================*/
//    virtual void Dump(CDumpContext &dc) const;
//#endif  //  _DEBUG
};

//CSingleMcuInfo保存某一级MCU下的终端和设置
class CSingleMcuInfo
{
public:
    CSingleMcuInfo();
    CSingleMcuInfo(const CSingleMcuInfo &cSingleMcuInfo);
    ~CSingleMcuInfo() { m_tplMt.Clear(); }

    /*=============================================================================
    函 数 名:operator=
    功    能:完整结构赋值
    参    数:const CSingleMcuInfo &cSingleMcuInfo   [in]    完整结构
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    const CSingleMcuInfo& operator=(const CSingleMcuInfo &cSingleMcuInfo);

    /*=============================================================================
    函 数 名:operator[]
    功    能:列表索引
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    const CMt& operator[](u16 wMtId) const;

    /*=============================================================================
    函 数 名:operator[]
    功    能:列表索引
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    const CMt& operator[](const TMt &tMt) const;

    /*=============================================================================
    函 数 名:IsExist
    功    能:终端是否存在
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsExist(u16 wMtId) const;

    /*=============================================================================
    函 数 名:IsExist
    功    能:终端是否存在
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsExist(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:const TMtExt *ptMtExt              [in]    终端列表数组
             s32 nNum                           [in]    终端个数
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TMtExt *ptMtExt, s32 nNum);

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:const TplArray<CMt> &tplMt         [in]    终端列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TplArray<CMt> &tplMt) { m_tplMt = tplMt; }

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新所有终端状态
    参    数:const TMtStatus *ptMtStatus        [in]    终端状态数组
             s32 nNum                           [in]    终端个数
    注    意:终端数组可能为空
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TMtStatus *ptMtStatus, s32 nNum);

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置终端完整结构
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetAt(const CMt &cMt);

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置终端扩展结构
    参    数:const TMtExt &tMtExt               [in]    终端扩展结构
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetAt(const TMtExt &tMtExt);

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置终端状态
    参    数:const TMtStatus &tMtStatus         [in]    终端状态
    注    意:无
    返 回 值:现有CMt里的m_tMtStatus与tMtStatus不一样:TRUE; 否则:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetAt(const TMtStatus &tMtStatus);

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置终端别名
    参    数:u16 wMtId                          [in]    终端标识号
             const TMtAlias &tMtAlias           [in]    终端别名
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetAt(u16 wMtId, const TMtAlias &tMtAlias);

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置终端录像进度
    参    数:u16 wMtId                          [in]    终端标识号
             const TRecProg &tRecProg           [in]    录像进度
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetAt(u16 wMtId, const TRecProg &tRecProg);

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置终端录像设备
    参    数:u16 wMtId                          [in]    终端标识号
             const TEqp &tRecEqp                [in]    录像设备
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetAt(u16 wMtId, const TEqp &tRecEqp);

    /*=============================================================================
    函 数 名:GetAt
    功    能:获取终端
    参    数:u16 wMtId                          [in]    终端标识号
             CMt &cMt                           [out]   终端
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetAt(u16 wMtId, CMt &cMt) const;

    /*=============================================================================
    函 数 名:GetAt
    功    能:获取终端
    参    数:const TMt &tMt                     [in]    终端
             CMt &cMt                           [out]   终端
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetAt(const TMt &tMt, CMt &cMt) const;

    /*=============================================================================
    函 数 名:GetMt
    功    能:获取终端
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    inline CMt& GetMt(u16 wMtId) const;

    /*=============================================================================
    函 数 名:GetMt
    功    能:获取终端
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMt(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:GetMtList
    功    能:获取终端列表
    参    数:无
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    const TplArray<CMt>& GetMtList(void) const { return m_tplMt; }

    /*=============================================================================
    函 数 名:GetMtNum
    功    能:获取终端个数
    参    数:无
    注    意:无
    返 回 值:s32
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    s32 GetMtNum(void) const { return m_tplMt.Size(); }

    /*=============================================================================
    函 数 名:GetOnlineMtNum
    功    能:获取在线终端个数
    参    数:无
    注    意:无
    返 回 值:s32
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    s32 GetOnlineMtNum(void) const;

    /*=============================================================================
    函 数 名:GetOfflineMtNum
    功    能:获取不在线终端个数
    参    数:无
    注    意:无
    返 回 值:s32
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    s32 GetOfflineMtNum(void) const;

    /*=============================================================================
    函 数 名:EraseMt
    功    能:删除某一终端
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
	BOOL32 EraseMt(u16 wMtId);

    /*=============================================================================
    函 数 名:EraseMt
    功    能:删除某一终端
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
	BOOL32 EraseMt(const TMt &tMt);

    /*=============================================================================
    函 数 名:GetMediaSrcMt
    功    能:获取MCU媒体源
    参    数:无
    注    意:无
    返 回 值:TMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    const TMt& GetMediaSrcMt(void) const { return m_tMediaSrcMt; }

    /*=============================================================================
    函 数 名:GetMediaSrcMt
    功    能:获取MCU媒体源
    参    数:无
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMediaSrcMt(void) { return GetMt(m_tMediaSrcMt); }

    /*=============================================================================
    函 数 名:IsMcuLocked
    功    能:MCU是否被锁定
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcuLocked(void) const { return m_byLockStatus; }

    /*=============================================================================
    函 数 名:SetMediaSrcMt
    功    能:设置MCU媒体源
    参    数:const TMt &tMt                     [in]    媒体源
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    void SetMediaSrcMt(const TMt &tMt) { m_tMediaSrcMt = tMt; }

    /*=============================================================================
    函 数 名:SetMcuLockStatus
    功    能:设置MCU锁定状态
    参    数:u8 byLocked                        [in]    锁定状态
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    void SetMcuLockStatus(u8 byLocked) { m_byLockStatus = byLocked; }

    /*=============================================================================
    函 数 名:SetNull
    功    能:清空信息列表
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    inline void SetNull(void);

    /*=============================================================================
    函 数 名:SetMixParam
    功    能:设置混音参数
    参    数:const TMixParam *ptMixParam    [in]    混音参数, NULL则清空
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/30  4.0     王昊    创建
    =============================================================================*/
    void SetMixParam(const TMixParam *ptMixParam = NULL);

    /*=============================================================================
    函 数 名:GetMixParam
    功    能:获取混音参数
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/30  4.0     王昊    创建
    =============================================================================*/
//    TDiscussParam& GetMixParam(void) { return m_tMixParam; }

    /*=============================================================================
    函 数 名:IsPartMix
    功    能:是否部分混音
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsPartMix(void) const
    { return    m_tMixParam.GetMode() == mcuPartMix
                    || m_tMixParam.GetMode() == mcuVacPartMix; }

    /*=============================================================================
    函 数 名:IsEntireMix
    功    能:是否全体混音
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsEntireMix(void) const
    { return    m_tMixParam.GetMode() == mcuWholeMix
                    || m_tMixParam.GetMode() == mcuVacWholeMix; }

    /*=============================================================================
    函 数 名:IsNoMix
    功    能:是否不在混音
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsNoMix(void) const
    { return    m_tMixParam.GetMode() == mcuNoMix
                    || m_tMixParam.GetMode() == mcuVacMix; }

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:在telnet里打印调试信息
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/09  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void) const;

public:
    TMt             m_tMediaSrcMt;      //  该MCU媒体源(本级不填)
    u8              m_byLockStatus;     //  该MCU锁定情况(本级不填)
    TMixParam       m_tMixParam;        //  该MCU混音参数(本级不填)

private:
    TplArray<CMt>   m_tplMt;            //  终端列表

//public:
//#ifdef _DEBUG
    /*=============================================================================
    函 数 名:Dump
    功    能:打印本类的成员调试信息
    参    数:CDumpContext &dc                   [in]    打印头
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
//    virtual void Dump(CDumpContext &dc) const;
//#endif
};

//CMcuTable保存会议所有MCU信息列表以及TConfAllMtInfo
class CMcuTable
{
public:
    CMcuTable();
    CMcuTable(const CMcuTable &cMcuTable);
    ~CMcuTable() { m_tplMcuId.Clear(); };

    /*=============================================================================
    函 数 名:operator=
    功    能:赋值函数
    参    数:const CMcuTable &cMcuTable             [in]    源数据
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/07  4.0     王昊    创建
    =============================================================================*/
    const CMcuTable& operator=(const CMcuTable &cMcuTable);

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:const TMcu &tMcu                   [in]    终端所属MCU
             const TMtExt *ptMtExt              [in]    终端列表
             s32 nNum                           [in]    终端个数
    注    意:ptMtExt里某些终端可能为空
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TMcu &tMcu, const TMtExt *ptMtExt, s32 nNum);

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:const TMcu &tMcu                   [in]    终端所属MCU
             const TMtStatus *ptMtStatus        [in]    终端状态列表
             s32 nNum                           [in]    终端个数
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TMcu &tMcu, const TMtStatus *ptMtStatus, s32 nNum);

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:u8 byMcuId                         [in]    终端所属MCU Id
             TplArray<CMt> &tplMt               [in]    终端列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/02  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList( u8 byMcuId, TplArray<CMt> &tplMt );

    /*=============================================================================
    函 数 名:SetMcuInfoList
    功    能:设置单级MCU信息列表
    参    数:const TMcu &tMcu                   [in]    MCU
             const CSingleMcuInfo &cSingleMcuInfo   [in]    单级MCU信息列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void SetMcuInfoList(const TMcu &tMcu, const CSingleMcuInfo &cSingleMcuInfo);

    /*=============================================================================
    函 数 名:SetMcuInfoList
    功    能:设置单级MCU信息列表
    参    数:u8 byMcuId                         [in]    MCU
             const CSingleMcuInfo &cSingleMcuInfo   [in]    单级MCU信息列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void SetMcuInfoList(u8 byMcuId, const CSingleMcuInfo &cSingleMcuInfo);

    /*=============================================================================
    函 数 名:GetMcuInfoList
    功    能:获取单级MCU信息列表
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:单级MCU信息列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    const CSingleMcuInfo& GetMcuInfoList(const TMcu &tMcu) const;

    /*=============================================================================
    函 数 名:GetMcuInfoList
    功    能:获取单级MCU信息列表
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:单级MCU信息列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    const CSingleMcuInfo& GetMcuInfoList(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:GetMtList
    功    能:获取指定MCU终端列表
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    const TplArray<CMt>& GetMtList(const TMcu tMcu) const;

    /*=============================================================================
    函 数 名:GetMtList
    功    能:获取指定MCU终端列表
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    const TplArray<CMt>& GetMtList(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:GetMcuList
    功    能:获取MCU列表
    参    数:TMcu *ptMcu                        [out]   TMcu数组
             s32 &nNum                          [in/out]    数组大小/实际填充大小
    注    意:无
    返 回 值:成功:TRUE; 数组分配过小: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMcuList(TMcu *ptMcu, s32 &nNum) const;

    /*=============================================================================
    函 数 名:GetMcuList
    功    能:获取MCU列表
    参    数:u8 *pbyMcuId                       [out]   McuId数组
             s32 &nNum                          [in/out]    数组大小/实际填充大小
    注    意:无
    返 回 值:成功:TRUE; 数组分配过小: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMcuList(u8 *pbyMcuId, s32 &nNum) const;

    /*=============================================================================
    函 数 名:GetMcuNum
    功    能:获取MCU个数
    参    数:无
    注    意:无
    返 回 值:MCU个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    s32 GetMcuNum(void) const { return m_tplMcuId.Size(); }

    /*=============================================================================
    函 数 名:SetAllMtInfo
    功    能:设置TConfAllMtInfo，更新终端列表
    参    数:const TConfAllMtInfo &tConfAllMtInfo   [in]    TConfAllMtInfo
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    2006/03/27  4.0     顾振华  使用新的结构重写
    =============================================================================*/
    void SetAllMtInfo(const TConfAllMtInfo &tConfAllMtInfo);

    /*=============================================================================
    函 数 名:GetConfAllMtInfo
    功    能:获取TConfAllMtInfo
    参    数:无
    注    意:无
    返 回 值:const TConfAllMtInfo
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    const TConfAllMtInfo& GetConfAllMtInfo(void) const
    { return m_tConfAllMtInfo; }

    /*=============================================================================
    函 数 名:GetConfAllMtInfo
    功    能:获取TConfAllMtInfo
    参    数:无
    注    意:无
    返 回 值:TConfAllMtInfo
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    TConfAllMtInfo& GetConfAllMtInfo(void) { return m_tConfAllMtInfo; }

    /*=============================================================================
    函 数 名:SetLocalMcuIpAddr
    功    能:设置本级MCU IP
    参    数:u32 dwMcuIpAddr                    [in]    本级MCU IP地址
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    void SetLocalMcuIpAddr(u32 dwMcuIpAddr);

    /*=============================================================================
    函 数 名:SetMcuMediaSrc
    功    能:设置MCU媒体源
    参    数:const TMcu &tMcu                   [in]    MCU
             const TMt &tMt                     [in]    媒体源
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void SetMcuMediaSrc(const TMcu &tMcu, const TMt &tMt);

    /*=============================================================================
    函 数 名:SetMcuMediaSrc
    功    能:设置MCU媒体源
    参    数:u8 byMcuId                         [in]    McuId
             const TMt &tMt                     [in]    媒体源
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/01  4.0     王昊    创建
    =============================================================================*/
    void SetMcuMediaSrc(u8 byMcuId, const TMt &tMt);

    /*=============================================================================
    函 数 名:GetMcuMediaSrc
    功    能:获取MCU媒体源
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:MCU媒体源
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    const TMt& GetMcuMediaSrc(const TMcu &tMcu) const;

    /*=============================================================================
    函 数 名:GetMcuMediaSrc
    功    能:获取MCU媒体源
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:MCU媒体源
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMcuMediaSrc(u8 byMcuId);

    /*=============================================================================
    函 数 名:SetMcuLockStatus
    功    能:设置下级MCU锁定状态
    参    数:const TMcu &tMcu                   [in]    下级MCU
             u8 byLockStatus                    [in]    锁定状态
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    void SetMcuLockStatus(const TMcu &tMcu, u8 byLockStatus);

    /*=============================================================================
    函 数 名:IsMcuLocked
    功    能:MCU是否被锁定
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcuLocked(const TMcu &tMcu) const;

    /*=============================================================================
    函 数 名:IsMcuLocked
    功    能:MCU是否被锁定
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcuLocked(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:SetMixParam
    功    能:设置混音参数
    参    数:const TMcu &tMcu                   [in]    MCU
             const TMixParam *ptMixParam    [in]    混音参数
    注    意:不设置本级
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    void SetMixParam(const TMcu &tMcu, const TMixParam *ptMixParam);

    /*=============================================================================
    函 数 名:SetMixParam
    功    能:设置混音参数
    参    数:u8 byMcuId                         [in]    McuId
             const TMixParam *ptMixParam    [in]    混音参数
    注    意:不设置本级
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    inline void SetMixParam(u8 byMcuId, const TMixParam *ptMixParam);

    /*=============================================================================
    函 数 名:GetMixParam
    功    能:获取混音参数
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:不获取本级
    返 回 值:混音参数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    TMixParam& GetMixParam(const TMcu &tMcu) const;

    /*=============================================================================
    函 数 名:GetMixParam
    功    能:获取混音参数
    参    数:u8 byMcuId                         [in]    McuId
    注    意:不获取本级
    返 回 值:混音参数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    inline TMixParam& GetMixParam(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsPartMix
    功    能:是否部分混音
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsPartMix(const TMcu &tMcu) const { return IsPartMix(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:IsPartMix
    功    能:是否部分混音
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsPartMix(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsEntireMix
    功    能:是否全体混音
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsEntireMix(const TMcu &tMcu) const { return IsPartMix(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:IsEntireMix
    功    能:是否全体混音
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsEntireMix(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsNoMix
    功    能:是否不在混音
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsNoMix(const TMcu &tMcu) const { return IsNoMix(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:IsNoMix
    功    能:是否不在混音
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsNoMix(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端完整结构
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(const CMt &cMt);

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端扩展结构
    参    数:const TMtExt &tMtExt               [in]    终端扩展结构
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(const TMtExt &tMtExt);

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端状态
    参    数:const TMtStatus &tMtStatus         [in]    终端状态
    注    意:无
    返 回 值:现有CMt里的m_tMtStatus与tMtStatus不一样:TRUE; 否则:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(const TMtStatus &tMtStatus);

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端别名
    参    数:u16 wMtId                          [in]    终端标识号
             const TMtAlias &tMtAlias           [in]    终端别名
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(u16 wMtId, const TMtAlias &tMtAlias);

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端录像进度
    参    数:u16 wMtId                          [in]    终端标识号
             const TRecProg &tRecProg           [in]    录像进度
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(u16 wMtId, const TRecProg &tRecProg);

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端录像设备
    参    数:u16 wMtId                          [in]    终端标识号
             const TEqp &tRecEqp                [in]    录像设备
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(u16 wMtId, const TEqp &tRecEqp);

    /*=============================================================================
    函 数 名:GetMt
    功    能:获取终端
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:终端完整结构
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMt(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:GetMt
    功    能:获取终端
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:无
    返 回 值:终端完整结构
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMt(u16 wMtId) const;

    /*=============================================================================
    函 数 名:GetLocalMcu
    功    能:获取当前MCU的完整终端结构
    参    数:无
    注    意:无
    返 回 值:当前MCU完整终端结构
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    CMt& GetLocalMcu(void) const;

    /*=============================================================================
    函 数 名:GetMcu
    功    能:根据TMcu获取对应的CMt
    参    数:const TMcu &tMcu                   [in]    MCU结构
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/30  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMcu(const TMcu &tMcu) const;

    /*=============================================================================
    函 数 名:GetMcu
    功    能:根据McuId获取对应的CMt
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMcu(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在受邀列表中
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInConf(const CMt &cMt) const;

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在受邀列表中
    参    数:const TMt &tMt                     [in]    终端基本结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsMtInConf(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在受邀列表中
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInConf(u16 wMtId) const;

    /*=============================================================================
    函 数 名:IsMtJoinConf
    功    能:终端是否在与会列表中
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtJoinConf(const CMt &cMt) const;

    /*=============================================================================
    函 数 名:IsMtJoinConf
    功    能:终端是否在与会列表中
    参    数:const TMt &tMt                     [in]    终端基本结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtJoinConf(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:IsMtJoinConf
    功    能:终端是否在与会列表中
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtJoinConf(u16 wMtId) const;

    /*=============================================================================
    函 数 名:IsMcu
    功    能:终端是否MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcu(const CMt &cMt) const;

    /*=============================================================================
    函 数 名:IsMcu
    功    能:终端是否MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcu(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:IsMMcu
    功    能:终端是否上级MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMMcu(const CMt &cMt) const;

    /*=============================================================================
    函 数 名:IsMMcu
    功    能:终端是否上级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMMcu(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:IsSMcu
    功    能:终端是否下级MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsSMcu(const CMt &cMt) const;

    /*=============================================================================
    函 数 名:IsSMcu
    功    能:终端是否下级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsSMcu(const TMt &tMt) const;

    /*=============================================================================
    函 数 名:IsLocalMcu
    功    能:终端是否本级MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsLocalMcu(const CMt &cMt) const
    { return CMtUtility::IsLocalMcu(cMt); }

    /*=============================================================================
    函 数 名:IsLocalMcu
    功    能:终端是否本级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsLocalMcu(const TMt &tMt) const
    { return CMtUtility::IsLocalMcu(tMt); }

    /*=============================================================================
    函 数 名:IsMtAvailable
    功    能:判断终端是否可操作
    参    数:const CMt &cMt                     [in]    需要判断的终端
             BOOL32 bIncludeMcu                 [in]    是否允许终端为MCU
    注    意:无
    返 回 值:终端是本级或下级MCU下的终端 : TRUE
            终端是本级MCU或上级MCU下的终端 : FALSE
            终端是上级或下级MCU : bIncludeMcu
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtAvaliable(const CMt &cMt, BOOL32 bIncludeMcu = TRUE) const;

    /*=============================================================================
    函 数 名:IsMtAvailable
    功    能:判断终端是否可操作
    参    数:const TMt &tMt                     [in]    需要判断的终端
             BOOL32 bIncludeMcu                 [in]    是否允许终端为MCU
    注    意:无
    返 回 值:终端是本级或下级MCU下的终端 : TRUE
            终端是本级MCU或上级MCU下的终端 : FALSE
            终端是上级或下级MCU : bIncludeMcu
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtAvaliable(const TMt &tMt, BOOL32 bIncludeMcu = TRUE) const;

    /*=============================================================================
    函 数 名:IsMtInSMcu
    功    能:判断终端是否在下级MCU上
    参    数:const CMt &cMt                      [in]    需要判断的终端
             TMcu &tMcu                          [out]   终端所在下级MCU
             BOOL32 bIncludeMcu                  [in]    是否包含下级MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInSMcu( const CMt &cMt, TMcu &tMcu,
                       BOOL32 bIncludeMcu = TRUE ) const;

    /*=============================================================================
    函 数 名:IsMtInSMcu
    功    能:判断终端是否在下级MCU上
    参    数:const TMt &tMt                      [in]    需要判断的终端
             TMcu &tMcu                          [out]   终端所在下级MCU
             BOOL32 bIncludeMcu                  [in]    是否包含下级MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInSMcu( const TMt &tMt, TMcu &tMcu,
                       BOOL32 bIncludeMcu = TRUE ) const;

    /*=============================================================================
    函 数 名:GetOnlineMtNum
    功    能:获取在线终端总数
    参    数:无
    注    意:不包括MCU, 从TConfAllMtInfo里提取
    返 回 值:在线终端总数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    s32 GetOnlineMtNum(void) const;

    /*=============================================================================
    函 数 名:GetOfflineMtNum
    功    能:获取不在线终端总数
    参    数:无
    注    意:不包括MCU, 从TConfAllMtInfo里提取
    返 回 值:不在线终端总数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/02  4.0     王昊    创建
    =============================================================================*/
    s32 GetOfflineMtNum(void) const;

    /*=============================================================================
    函 数 名:GetMtNum
    功    能:获取终端总个数
    参    数:无
    注    意:不包括MCU, 从TConfAllMtInfo里提取
    返 回 值:终端总个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/15  4.0     王昊    创建
    =============================================================================*/
    s32 GetMtNum(void) const;

    /*=============================================================================
    函 数 名:GetConfCascadeType
    功    能:获取会议级联类型
    参    数:无
    注    意:无
    返 回 值:emSingleConf、emTwoLayerMMcuConf、emTwoLayerSMcuConf、emThreeLayerConf
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    s32 GetConfCascadeType(void) const;

    /*=============================================================================
    函 数 名:IsConfCascade
    功    能:会议是否级联
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfCascade(void) const
    { return (GetConfCascadeType() != emSingleConf); }

    /*=============================================================================
    函 数 名:SetNull
    功    能:清空
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    inline void SetNull(void);

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:在telnet里打印调试信息
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/12  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void) const;

    /*=============================================================================
    函 数 名:PrintConfAllMcuInfo
    功    能:在telnet里打印调试信息
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/21  4.0     王昊    创建
    =============================================================================*/
    void PrintConfAllMcuInfo(void) const;

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:在telnet里打印调试信息
    参    数:u8 byMcuId                         [in]    McuId
             u8 byMtId                          [in]    MtId
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/13  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(u8 byMcuId, u8 byMtId) const;

	/*====================================================================
	函 数 名： GetMMcu
	功    能： 获取上级MCU的ID
	算法实现： 
	全局变量： 
	参    数： 
	返 回 值： inline TMt& 
	--------------------------------------------------------------------
	修改记录：
	日  期	      版本		    修改人		走读人    修改内容
	2006/5/29      4.0		    刘瑞飞                   创建
	======================================================================*/
	inline const TMt& GetMMcu() const
	{
		return m_tConfAllMtInfo.m_tMMCU;
	}
private:
    /*=============================================================================
    函 数 名:ResetMtOnlineStatus
    功    能:更新在线状态
    参    数:u8 byMcuId                         [in]    需要刷新的MCU, 0则刷新所有
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/13  4.0     王昊    创建
    =============================================================================*/
    void ResetMtOnlineStatus(u8 byMcuId);

    /*=============================================================================
    函 数 名:McuID2TblIdx
    功    能:获取MCU号对应的CSingMcu数组索引
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:MCU索引, 找不到MCU则返回INDEX_ERR
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/30  4.0     王昊    创建
    =============================================================================*/
    inline s32 McuID2TblIdx(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:GetNextFreeListPtr
    功    能:查找下一个可用的CSingleMcuInfo
    参    数:
    注    意:无
    返 回 值:可用的索引, 没有可用则返回INDEX_ERR
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/03/27  4.0     顾振华  创建
    =============================================================================*/
    inline u8 GetNextFreeListPtr() ;
    
public:
    u32             m_dwLocalMcuIp;                     //  本级MCUIP
    CMt             m_cLocalMcu;                        //  本级MCU

private:
    // 顾振华@2006.3.27
    // 适应MCU关于级联的结构，增加TMcu中McuID <--> 64个CSingleMcuInfo的映射 
    u8              m_abyMcuMap[MAXNUM_CONF_MT + 1];    

    TConfAllMtInfo  m_tConfAllMtInfo;                   //  所有终端信息
    CSingleMcuInfo  m_acMcuInfo[MAXNUM_SUB_MCU + 1];    //  MCU信息数组    
    bool            m_abMcuInfoUsed[MAXNUM_SUB_MCU + 1];//  记录哪些MCUInfo已经使用    
    u8              m_byMcuUsedInfoPtr;                 //  已经使用的MCUInfo查找头指针
    
    TplArray<u8>    m_tplMcuId;                         //  记录哪些MCU存在

//public:
//#ifdef _DEBUG
//    /*=============================================================================
//    函 数 名:Dump
//    功    能:打印本类的成员调试信息
//    参    数:CDumpContext &dc                   [in]    打印头
//    注    意:无
//    返 回 值:无
//    -------------------------------------------------------------------------------
//    修改纪录:
//    日      期  版本    修改人  修改内容
//    2005/06/03  4.0     王昊    创建
//    =============================================================================*/
//    virtual void Dump(CDumpContext &dc) const;
//#endif
};

//CConf保存单个会议信息
class CConf : public TConfInfo
{
public:
    CConf() { SetNull(); }

    ~CConf() {}
public:
    /*=============================================================================
    函 数 名:operator=
    功    能:赋值运算符
    参    数:const CConf &cConf                 [in]    源会议
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/07  4.0     王昊    创建
    =============================================================================*/
    const CConf& operator=(const CConf &cConf);

    /*=============================================================================
    函 数 名:operator+=
    功    能:重载运算符, 用新的会议信息更新内容
    参    数:const TConfInfo &tConfInfo         [in]    会议信息
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/07  4.0     王昊    创建
    =============================================================================*/
    const CConf& operator+=(const TConfInfo &tConfInfo);

    /*=============================================================================
    函 数 名:IsVmpStatusChange
    功    能:画面合成状态是否更改
    参    数:const TConfStatus &tOldConfStatus  [in]    旧会议状态
    注    意:判断是否需要刷新画面合成界面时用到
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/27  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsVmpStatusChange(const TConfStatus &tOldConfStatus) const;

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:const TMcu &tMcu                   [in]    列表所属MCU
             const TMtExt *ptMtExt              [in]    终端列表数组
             s32 nNum                           [in]    终端个数
    注    意:ptMtExt里某些终端可能为空
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TMcu &tMcu, const TMtExt *ptMtExt, s32 nNum)
    { m_cMcuTable.UpdateMtList(tMcu, ptMtExt, nNum); }

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端状态列表
    参    数:const TMcu &tMcu                   [in]    列表所属MCU
             const TMtStatus *ptMtStatus        [in]    终端状态列表数组
             s32 nNum                           [in]    终端个数
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList(const TMcu &tMcu, const TMtStatus *ptMtStatus, s32 nNum)
    { m_cMcuTable.UpdateMtList(tMcu, ptMtStatus, nNum); }

    /*=============================================================================
    函 数 名:UpdateMtList
    功    能:更新终端列表
    参    数:u8 byMcuId                         [in]    终端所属MCU Id
             TplArray<CMt> &tplMt               [in]    终端列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/05  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtList( u8 byMcuId, TplArray<CMt> &tplMt )
    { m_cMcuTable.UpdateMtList( byMcuId, tplMt ); }

    /*=============================================================================
    函 数 名:GetMcuInfoList
    功    能:获取MCU信息列表
    参    数:const TMcu &tMcu                   [in]    终端所属MCU
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    const CSingleMcuInfo& GetMcuInfoList(const TMcu &tMcu) const
    { return m_cMcuTable.GetMcuInfoList(tMcu); }

    /*=============================================================================
    函 数 名:GetMcuInfoList
    功    能:获取MCU信息列表
    参    数:u8 byMcuId                         [in]    终端所属MCU的Mcu Id
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    const CSingleMcuInfo& GetMcuInfoList(u8 byMcuId) const
    { return m_cMcuTable.GetMcuInfoList(byMcuId); }

    /*=============================================================================
    函 数 名:SetMcuInfoList
    功    能:设置MCU信息列表
    参    数:const TMcu &tMcu                   [in]    终端列表所属MCU
             const CSingleMcuInfo &cSingleMcuInfo   [in]    MCU信息列表
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetMcuInfoList(const TMcu &tMcu, const CSingleMcuInfo &cSingleMcuInfo)
    { m_cMcuTable.SetMcuInfoList(tMcu, cSingleMcuInfo); }

    /*=============================================================================
    函 数 名:SetMcuInfoList
    功    能:设置MCU信息列表
    参    数:u8 byMcuId                         [in]    终端列表所属MCU的McuId
             const CSingleMcuInfo &cSingleMcuInfo   [in]    MCU信息列表
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetMcuInfoList(u8 byMcuId, const CSingleMcuInfo &cSingleMcuInfo)
    { m_cMcuTable.SetMcuInfoList(byMcuId, cSingleMcuInfo); }

    /*=============================================================================
    函 数 名:GetMtList
    功    能:获取指定MCU终端列表
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    const TplArray<CMt>& GetMtList(const TMcu tMcu) const
    { return m_cMcuTable.GetMtList(tMcu); }

    /*=============================================================================
    函 数 名:GetMtList
    功    能:获取指定MCU终端列表
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:终端列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    const TplArray<CMt>& GetMtList(u8 byMcuId) const
    { return m_cMcuTable.GetMtList(byMcuId); }

    /*=============================================================================
    函 数 名:GetMcuList
    功    能:获取MCU列表
    参    数:TMcu *ptMcu                        [out]   TMcu数组
             s32 &nNum                          [in/out]    数组大小/实际填充大小
    注    意:无
    返 回 值:成功:TRUE; 数组分配过小: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMcuList(TMcu *ptMcu, s32 &nNum) const
    { return m_cMcuTable.GetMcuList(ptMcu, nNum); }

    /*=============================================================================
    函 数 名:GetMcuList
    功    能:获取MCU列表
    参    数:u8 *pbyMcuId                       [out]   McuId数组
             s32 &nNum                          [in/out]    数组大小/实际填充大小
    注    意:无
    返 回 值:成功:TRUE; 数组分配过小: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMcuList(u8 *pbyMcuId, s32 &nNum) const
    { return m_cMcuTable.GetMcuList(pbyMcuId, nNum); }

    /*=============================================================================
    函 数 名:GetMcuNum
    功    能:获取MCU个数
    参    数:无
    注    意:无
    返 回 值:MCU个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    s32 GetMcuNum(void) const { return m_cMcuTable.GetMcuNum(); }

    /*=============================================================================
    函 数 名:SetAllMtInfo
    功    能:设置TConfAllMtInfo
    参    数:const TConfAllMtInfo &tConfAllMtInfo   [in]    TConfAllMtInfo
    注    意:会更新终端在线信息, 以及CSingleMcuInfo
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetAllMtInfo(const TConfAllMtInfo &tConfAllMtInfo)
    { m_cMcuTable.SetAllMtInfo(tConfAllMtInfo); }

    /*=============================================================================
    函 数 名:GetConfAllMtInfo
    功    能:获取TConfAllMtInfo
    参    数:无
    注    意:无
    返 回 值:const TConfAllMtInfo
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    const TConfAllMtInfo& GetConfAllMtInfo(void) const
    { return m_cMcuTable.GetConfAllMtInfo(); }

    /*=============================================================================
    函 数 名:GetConfAllMtInfo
    功    能:获取TConfAllMtInfo
    参    数:无
    注    意:无
    返 回 值:TConfAllMtInfo
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    TConfAllMtInfo& GetConfAllMtInfo(void)
    { return m_cMcuTable.GetConfAllMtInfo(); }

    /*=============================================================================
    函 数 名:SetLocalMcuIpAddr
    功    能:设置本级MCU的IP地址
    参    数:u32 dwMcuIpAddr                    [in]    本级MCU的IP地址
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetLocalMcuIpAddr(u32 dwMcuIpAddr)
    { m_cMcuTable.SetLocalMcuIpAddr(dwMcuIpAddr); }

    /*=============================================================================
    函 数 名:SetMcuMediaSrc
    功    能:设置MCU媒体源
    参    数:const TMcu &tMcu                   [in]    TMcu
             const TMt &tMt                     [in]    媒体源
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    inline void SetMcuMediaSrc(const TMcu &tMcu, const TMt &tMt)
    { SetMcuMediaSrc( tMcu.GetMcuId(), tMt); }

    /*=============================================================================
    函 数 名:SetMcuMediaSrc
    功    能:设置MCU媒体源
    参    数:u8 byMcuId                         [in]    McuId
             const TMt &tMt                     [in]    媒体源
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    2006/09/05  4.0     王昊    特殊处理, 混音
    =============================================================================*/
    void SetMcuMediaSrc(u8 byMcuId, const TMt &tMt);

    /*=============================================================================
    函 数 名:GetMcuMediaSrc
    功    能:获取MCU媒体源
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:MCU媒体源
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    const TMt& GetMcuMediaSrc(const TMcu &tMcu) const
    { return m_cMcuTable.GetMcuMediaSrc(tMcu); }

    /*=============================================================================
    函 数 名:GetMcuMediaSrc
    功    能:获取MCU媒体源
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:MCU媒体源
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMcuMediaSrc(u8 byMcuId)
    { return m_cMcuTable.GetMcuMediaSrc(byMcuId); }

    /*=============================================================================
    函 数 名:SetMcuLockStatus
    功    能:设置MCU锁定状态
    参    数:const TMcu &tMcu                   [in]    MCU
             u8 byLockStatus                    [in]    锁定状态
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetMcuLockStatus(const TMcu &tMcu, u8 byLockStatus)
    { m_cMcuTable.SetMcuLockStatus(tMcu, byLockStatus); }

    /*=============================================================================
    函 数 名:IsMcuLocked
    功    能:MCU是否被锁定
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcuLocked(const TMcu &tMcu) const
    { return m_cMcuTable.IsMcuLocked(tMcu); }

    /*=============================================================================
    函 数 名:IsMcuLocked
    功    能:MCU是否被锁定
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcuLocked(u8 byMcuId) const
    { return m_cMcuTable.IsMcuLocked(byMcuId); }

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端完整结构
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(const CMt &cMt) { return m_cMcuTable.SetMt(cMt); }

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端扩展结构
    参    数:const TMtExt &tMtExt               [in]    终端扩展结构
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(const TMtExt &tMtExt) { return m_cMcuTable.SetMt(tMtExt); }

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端状态
    参    数:const TMtStatus &tMtStatus         [in]    终端状态
    注    意:无
    返 回 值:现有CMt里的m_tMtStatus与tMtStatus不一样:TRUE; 否则:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(const TMtStatus &tMtStatus)
    { return m_cMcuTable.SetMt(tMtStatus); }

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端别名
    参    数:u16 wMtId                          [in]    终端标识号
             const TMtAlias &tMtAlias           [in]    终端别名
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(u16 wMtId, const TMtAlias &tMtAlias)
    { return m_cMcuTable.SetMt(wMtId, tMtAlias); }

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端录像进度
    参    数:u16 wMtId                          [in]    终端标识号
             const TRecProg &tRecProg           [in]    录像进度
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(u16 wMtId, const TRecProg &tRecProg)
    { return m_cMcuTable.SetMt(wMtId, tRecProg); }

    /*=============================================================================
    函 数 名:SetMt
    功    能:设置终端录像设备
    参    数:u16 wMtId                          [in]    终端标识号
             const TEqp &tRecEqp                [in]    录像设备
    注    意:无
    返 回 值:成功返回TRUE; 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 SetMt(u16 wMtId, const TEqp &tRecEqp)
    { return m_cMcuTable.SetMt(wMtId, tRecEqp); }

    /*=============================================================================
    函 数 名:GetMt
    功    能:获取终端
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:终端完整结构
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMt(const TMt &tMt) const
    { return m_cMcuTable.GetMt(tMt); }

    /*=============================================================================
    函 数 名:GetMt
    功    能:获取终端
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:无
    返 回 值:终端完整结构
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMt(u16 wMtId) const
    { return m_cMcuTable.GetMt(wMtId); }

    /*=============================================================================
    函 数 名:GetLocalMcu
    功    能:获取当前MCU的完整终端结构
    参    数:无
    注    意:无
    返 回 值:当前MCU完整终端结构
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    CMt& GetLocalMcu(void) const
    { return m_cMcuTable.GetLocalMcu(); }

    /*=============================================================================
    函 数 名:GetMcu
    功    能:根据TMcu获取对应的CMt
    参    数:const TMcu &tMcu                   [in]    MCU结构
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMcu(const TMcu &tMcu) const
    { return m_cMcuTable.GetMcu(tMcu); }

    /*=============================================================================
    函 数 名:GetMcu
    功    能:根据McuId获取对应的CMt
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:CMt
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    CMt& GetMcu(u8 byMcuId) const
    { return m_cMcuTable.GetMcu(byMcuId); }

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在受邀列表中
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInConf(const CMt &cMt) const
    { return m_cMcuTable.IsMtInConf(cMt); }

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在受邀列表中
    参    数:const TMt &tMt                     [in]    终端基本结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInConf(const TMt &tMt) const
    { return m_cMcuTable.IsMtInConf(tMt); }

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在受邀列表中
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInConf(u16 wMtId) const
    { return m_cMcuTable.IsMtInConf(wMtId); }

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在与会列表中
    参    数:const CMt &cMt                     [in]    终端完整结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtJoinConf(const CMt &cMt) const
    { return m_cMcuTable.IsMtJoinConf(cMt); }

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在与会列表中
    参    数:const TMt &tMt                     [in]    终端基本结构
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtJoinConf(const TMt &tMt) const
    { return m_cMcuTable.IsMtJoinConf(tMt); }

    /*=============================================================================
    函 数 名:IsMtInConf
    功    能:终端是否在与会列表中
    参    数:u16 wMtId                          [in]    终端标识号
    注    意:根据TConfAllMtInfo来判断
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtJoinConf(u16 wMtId) const
    { return m_cMcuTable.IsMtJoinConf(wMtId); }

    /*=============================================================================
    函 数 名:IsMcu
    功    能:终端是否MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcu(const CMt &cMt) const { return m_cMcuTable.IsMcu(cMt); }

    /*=============================================================================
    函 数 名:IsMcu
    功    能:终端是否MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMcu(const TMt &tMt) const { return m_cMcuTable.IsMcu(tMt); }

    /*=============================================================================
    函 数 名:IsMMcu
    功    能:终端是否上级MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMMcu(const CMt &cMt) const { return m_cMcuTable.IsMMcu(cMt); }

    /*=============================================================================
    函 数 名:IsMMcu
    功    能:终端是否上级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMMcu(const TMt &tMt) const { return m_cMcuTable.IsMMcu(tMt); }

    /*=============================================================================
    函 数 名:IsSMcu
    功    能:终端是否下级MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsSMcu(const CMt &cMt) const { return m_cMcuTable.IsSMcu(cMt); }

    /*=============================================================================
    函 数 名:IsSMcu
    功    能:终端是否下级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsSMcu(const TMt &tMt) const { return m_cMcuTable.IsSMcu(tMt); }

    /*=============================================================================
    函 数 名:IsLocalMcu
    功    能:终端是否本级MCU
    参    数:const CMt &cMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsLocalMcu(const CMt &cMt) const
    { return m_cMcuTable.IsLocalMcu(cMt); }

    /*=============================================================================
    函 数 名:IsLocalMcu
    功    能:终端是否本级MCU
    参    数:const TMt &tMt                     [in]    终端
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsLocalMcu(const TMt &tMt) const
    { return m_cMcuTable.IsLocalMcu(tMt); }

    /*=============================================================================
    函 数 名:IsMtAvailable
    功    能:判断终端是否可操作
    参    数:const CMt &cMt                     [in]    需要判断的终端
             BOOL32 bIncludeMcu                 [in]    是否允许终端为MCU
    注    意:无
    返 回 值:终端是本级或下级MCU下的终端 : TRUE
            终端是本级MCU或上级MCU下的终端 : FALSE
            终端是上级或下级MCU : bIncludeMcu
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/24  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtAvaliable(const CMt &cMt, BOOL32 bIncludeMcu = TRUE) const
    { return m_cMcuTable.IsMtAvaliable(cMt, bIncludeMcu); }

    /*=============================================================================
    函 数 名:IsMtInSMcu
    功    能:判断终端是否在下级MCU上
    参    数:const CMt &cMt                     [in]    需要判断的终端
             TMcu &tMcu                         [out]   终端所在下级MCU
             BOOL32 bIncludeMcu                 [in]    是否包含下级MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/24  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsMtInSMcu(const CMt &cMt, TMcu &tMcu, BOOL32 bIncludeMcu = TRUE) const
    { return m_cMcuTable.IsMtInSMcu(cMt, tMcu, bIncludeMcu); }

    /*=============================================================================
    函 数 名:GetOnlineMtNum
    功    能:获取在线终端总数
    参    数:无
    注    意:不包括MCU, 从TConfAllMtInfo里提取
    返 回 值:在线终端总数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/24  4.0     王昊    创建
    =============================================================================*/
    s32 GetOnlineMtNum(void) const { return m_cMcuTable.GetOnlineMtNum(); }

    /*=============================================================================
    函 数 名:GetOfflineMtNum
    功    能:获取不在线终端总数
    参    数:无
    注    意:不包括MCU, 从TConfAllMtInfo里提取
    返 回 值:不在线终端总数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/24  4.0     王昊    创建
    =============================================================================*/
    s32 GetOfflineMtNum(void) const { return m_cMcuTable.GetOfflineMtNum(); }

    /*=============================================================================
    函 数 名:GetMtNum
    功    能:获取终端总个数
    参    数:无
    注    意:不包括MCU, 从TConfAllMtInfo里提取
    返 回 值:终端总个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/15  4.0     王昊    创建
    =============================================================================*/
    s32 GetMtNum(void) const { return m_cMcuTable.GetMtNum(); }

    /*=============================================================================
    函 数 名:GetConfCascadeType
    功    能:获取会议级联类型
    参    数:无
    注    意:无
    返 回 值:emSingleConf、emTwoLayerMMcuConf、emTwoLayerSMcuConf、emThreeLayerConf
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    s32 GetConfCascadeType(void) const
    { return m_cMcuTable.GetConfCascadeType(); }

    /*=============================================================================
    函 数 名:IsConfCascade
    功    能:会议是否级联
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfCascade(void) const { return m_cMcuTable.IsConfCascade(); }

    /*=============================================================================
    函 数 名:SetRecEqp
    功    能:设置会议录像设备
    参    数:const TEqp &tRecEqp                [in]    录像设备
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    void SetRecEqp(const TEqp &tRecEqp);

    /*=============================================================================
    函 数 名:SetPlayEqp
    功    能:设置会议放像设备
    参    数:const TEqp &tPlayEqp               [in]    录像设备
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    void SetPlayEqp(const TEqp &tPlayEqp);

    /*=============================================================================
    函 数 名:GetRecEqp
    功    能:获取录像设备
    参    数:无
    注    意:无
    返 回 值:录像设备
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    TEqp& GetRecEqp(void) const { return const_cast<TEqp&>(m_tRecEqp); }

    /*=============================================================================
    函 数 名:GetPlayEqp
    功    能:获取放像设备
    参    数:无
    注    意:无
    返 回 值:放像设备
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    TEqp& GetPlayEqp(void) const { return const_cast<TEqp&>(m_tPlayEqp); }

    /*=============================================================================
    函 数 名:GetSerialNo
    功    能:获取会议序列号
    参    数:无
    注    意:界面上SetItemData时用到
    返 回 值:会议序列号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    u32 GetSerialNo(void) const { return m_dwSN; }

    /*=============================================================================
    函 数 名:SetSerialNo
    功    能:设置会议序列号
    参    数:u32 dwSN                           [in]    序列号
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetSerialNo(u32 dwSN) { m_dwSN = dwSN; }

    /*=============================================================================
    函 数 名:IsLockBySelf
    功    能:会议是否被当前会控锁定
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsLockBySelf(void) const { return (m_byLockBySelf > 0); }

    /*=============================================================================
    函 数 名:SetLockBySelf
    功    能:设置会议是否被当前会控锁定
    参    数:BOOL32 bLockBySelf                 [in]    BOOL
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    void SetLockBySelf(BOOL32 bLockBySelf)
    { m_byLockBySelf = (bLockBySelf ? true : false); }

    /*=============================================================================
    函 数 名:IsConfOngoing
    功    能:是否即时会议
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfOngoing(void) const { return m_tStatus.IsOngoing(); }

    /*=============================================================================
    函 数 名:IsConfTemplate
    功    能:是否会议模板,已经废弃.CConf都是即时会议
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfTemplate(void) const { return m_tStatus.IsTemplate(); }

    /*=============================================================================
    函 数 名:IsConfScheduled
    功    能:是否预约会议,已经废弃.CConf都是即时会议
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/16  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfScheduled(void) const { return m_tStatus.IsScheduled(); }

    /*=============================================================================
    函 数 名:GetSpeaker
    功    能:获取会议发言人
    参    数:无
    注    意:如果发言人是MCU, 则查找该MCU的媒体源
    返 回 值:会议发言人
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    CMt& GetSpeaker(void) const;

    /*=============================================================================
    函 数 名:operator==
    功    能:比较运算符
    参    数:const CConf &cConf                 [in]    会议
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 operator==(const CConf &cConf) const
    { return (cConf.GetConfId() == m_cConfId); }

    /*=============================================================================
    函 数 名:SetNull
    功    能:清空
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    inline void SetNull(void);

    /*=======================================================================
    函 数 名:HasGetInitValue
    功    能:判断该会议是否从MCU处理到过初始信息, 
             这些信息为会议独享、所有终端状态、所有终端别名、
                       下级MCU锁定状态、下级MCU混音参数
    参    数:s32 nType                          [in]    获到的信息类型
                                                        emLockInfo/
                                                        emAllMtStatus/
                                                        emAllMtAlias/
                                                        emAllMcuMediaSrc/
                                                        emAllSMcuLockStatus/
                                                        emAllSMcuMixParam/
                                                        emAllInfo
    注    意:无
    返 回 值:已经得到过返回TRUE, 没有得到过返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =======================================================================*/
    BOOL32 HasGetInitValue(s32 nType);

    /*=============================================================================
    函 数 名:SetGetInitValue
    功    能:设置该会议已经从MCU处理到过初始信息, 
             这些信息为会议独享、所有终端状态、所有终端别名、下级MCU锁定状态、
                       下级MCU混音参数
    参    数:s32 nType                          [in]    获到的信息类型
                                                        emLockInfo/
                                                        emAllMtStatus/
                                                        emAllMtAlias/
                                                        emAllMcuMediaSrc/
                                                        emAllSMcuLockStatus/
                                                        emAllSMcuMixParam/
                                                        emAllInfo
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    void SetGetInitValue(s32 nType);

    /*=============================================================================
    函 数 名:SetMixParam
    功    能:设置混音参数
    参    数:const TMcu &tMcu                   [in]    MCU
             const TMixParam *ptMixParam    [in]    混音参数
    注    意:不设置本级
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    void SetMixParam(const TMcu &tMcu, const TMixParam *ptMixParam)
    { SetMixParam( tMcu.GetMcuId(), ptMixParam ); }

    /*=============================================================================
    函 数 名:SetMixParam
    功    能:设置混音参数
    参    数:u8 byMcuId                         [in]    McuId
             const TMixParam *ptMixParam    [in]    混音参数
    注    意:不设置本级
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    void SetMixParam(u8 byMcuId, const TMixParam *ptMixParam);

    /*=============================================================================
    函 数 名:GetMixParam
    功    能:获取混音参数
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:混音参数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    TMixParam& GetMixParam(const TMcu &tMcu) const
    { return GetMixParam(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:GetMixParam
    功    能:获取混音参数
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:混音参数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    inline TMixParam& GetMixParam(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsConfPartMix
    功    能:指定MCU是否部分混音
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfPartMix(const TMcu &tMcu) const
    { return IsConfPartMix(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:IsConfPartMix
    功    能:指定MCU是否部分混音
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsConfPartMix(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsConfEntireMix
    功    能:指定MCU是否全体混音
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfEntireMix(const TMcu &tMcu) const
    { return IsConfEntireMix(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:IsConfEntireMix
    功    能:指定MCU是否全体混音
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsConfEntireMix(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:IsConfNoMix
    功    能:指定MCU是否没有混音
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsConfNoMix(const TMcu &tMcu) const
    { return IsConfNoMix(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:IsConfNoMix
    功    能:指定MCU是否没有混音
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/04  4.0     王昊    创建
    =============================================================================*/
    inline BOOL32 IsConfNoMix(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:GetMixMember
    功    能:获取混音成员
    参    数:TMt *ptMt                          [out]       混音成员
             s32 &nMtNum                        [in/out]    数组大小
    注    意:包括下级, 只有终端, 不含MCU
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    void GetMixMember(TMt *ptMt, s32 &nMtNum) const;

    /*=============================================================================
    函 数 名:GetLocalMixNum
    功    能:获取本级混音成员个数
    参    数:无
    注    意:包括下级MCU
    返 回 值:本级混音成员个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/08/07  4.0     王昊    创建
    =============================================================================*/
    s32 GetLocalMixNum(void) const;

    /*=============================================================================
    函 数 名:GetSMcuMixNum
    功    能:获取下级MCU参与混音的终端个数
    参    数:const TMcu &tMcu                   [in]    MCU
    注    意:无
    返 回 值:终端个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    s32 GetSMcuMixNum(const TMcu &tMcu) const
    { return GetSMcuMixNum(tMcu.GetMcuId()); }

    /*=============================================================================
    函 数 名:GetSMcuMixNum
    功    能:获取下级MCU参与混音的终端个数
    参    数:u8 byMcuId                         [in]    McuId
    注    意:无
    返 回 值:终端个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/13  4.0     王昊    创建
    =============================================================================*/
    s32 GetSMcuMixNum(u8 byMcuId) const;

    /*=============================================================================
    函 数 名:GetLocalConfIdx
    功    能:获取会议索引号
    参    数:无
    注    意:无
    返 回 值:会议索引号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/02  4.0     王昊    创建
    =============================================================================*/
    u8 GetLocalConfIdx(void)
    { return m_cMcuTable.GetConfAllMtInfo().m_tLocalMtInfo.GetConfIdx(); }

    /*=============================================================================
    函 数 名:UpdateMtVmpStatus
    功    能:更新终端画面合成状态
    参    数:const TVmpStatus *ptVmpStatus      [in]    画面合成状态
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/02  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtVmpStatus(const TVmpStatus *ptVmpStatus);

    /*=============================================================================
    函 数 名:UpdateMtMultiTvWallStatus
    功    能:更新终端多画面电视墙状态
    参    数:const TVmpStatus *ptMultTWStatus   [in]    多画面电视墙状态
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/10/14  4.0     王昊    创建
    =============================================================================*/
    void UpdateMtMultiTvWallStatus(const TVmpStatus *ptMultTWStatus);

    /*=============================================================================
    函 数 名:GetMMcuSpeaker
    功    能:获取广播通道终端
    参    数:CMt &cMt                           [out]   广播通道终端
    注    意:会议中必须含有上级MCU
    返 回 值:广播通道有终端:TRUE, 广播通道没有终端:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/11  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMMcuSpeaker(CMt &cMt) const;

    /*=============================================================================
    函 数 名:GetMMcuSpeaker
    功    能:获取广播通道终端
    参    数:TMt &tMt                           [out]   广播通道终端
    注    意:会议中必须含有上级MCU
    返 回 值:广播通道有终端:TRUE, 广播通道没有终端:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/11  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetMMcuSpeaker(TMt &tMt) const;

    /*=============================================================================
    函 数 名:GetVideoToMMcuMt
    功    能:获取回传通道终端
    参    数:TMt &tMt                           [out]   回传通道终端
    注    意:会议中必须含有上级MCU
    返 回 值:回传通道有终端:TRUE, 回传通道没有终端:FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/11  4.0     王昊    创建
    2005/08/23  4.0     王昊    回传通道可能是VMP, 去掉参数为CMt的接口
    =============================================================================*/
    BOOL32 GetVideoToMMcuMt(TMt &tMt) const;

    /*=============================================================================
    函 数 名:SetLastRateReqTime
    功    能:设置上一次发送请求所有终端码率的时间
    参    数:u32 dwTime         [in] 时间
    注    意:
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/01/10  4.0     顾振华  创建
    =============================================================================*/
    void SetLastRateReqTime(u32 dwTime) { m_dwLastRateReqTime = dwTime; }

    /*=============================================================================
    函 数 名:GetLastRateReqTime
    功    能:获取上一次发送请求所有终端码率的时间
    参    数:
    注    意:
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/01/10  4.0     顾振华  创建
    =============================================================================*/
    u32 GetLastRateReqTime() const { return m_dwLastRateReqTime; }

    inline void SetPwdEntered(BOOL32 bEntered = TRUE) { m_bPwdEntered = bEntered; }

    inline BOOL32 IsPwdEntered() const { return m_bPwdEntered; }

public:
    u32             m_dwGetInitValue;   //  用于记录是否得到到初始的状态，主要是连接MCU时用到
    u8              m_byLockBySelf;     //  会议是否被本会控锁定
    u32             m_dwLockMcsIP;      //  锁定会议的会控IP
    u8              m_abyLockUserName[MAXLEN_PWD + 1];  //  锁定会议的用户名
    BOOL32          m_bPwdEntered;      //  记录用户是否输入过密码，主要是在MCU要求用户输入密码后记录
    u32             m_dwSN;             //  会议序号
    CMcuTable       m_cMcuTable;        //  会议所有MCU列表
    CBasicVCCStatus m_cVcsConfStatus;   //  会议调度状态
private:
    TEqp            m_tRecEqp;          //  会议录像设备
    TEqp            m_tPlayEqp;         //  会议放像设备

    u32             m_dwLastRateReqTime;//  记录上一次发送请求所有终端码率的时间
};

//CConfTable以数组形式保存连接MCU上所有即时/预约会议列表
class CConfTable
{
public:
    CConfTable();
    CConfTable(const CConfTable &cConfTable);

    ~CConfTable() {}

    /*=============================================================================
    函 数 名:operator=
    功    能:赋值
    参    数:const CConfTable &cConfTable       [in]    会议列表
    注    意:无
    返 回 值:会议列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    const CConfTable& operator=(const CConfTable &cConfTable);

    /*=============================================================================
    函 数 名:operator[]
    功    能:根据会议号索引出具体会议
    参    数:const CConfId &cConfId             [in]    会议号
    注    意:无
    返 回 值:会议
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    CConf& operator[](const CConfId &cConfId);

    /*=============================================================================
    函 数 名:operator[]
    功    能:根据会议号索引出具体会议
    参    数:u32 dwConfSN                       [in]    会议索引号
    注    意:无
    返 回 值:会议
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    CConf& operator[](u32 dwConfSN);

    /*=============================================================================
    函 数 名:GetAt
    功    能:获取会议
    参    数:const CConfId &cConfId             [in]    会议号
             CConf &cConf                       [out]   会议
    注    意:无
    返 回 值:会议存在: TRUE; 不存在: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetAt(const CConfId &cConfId, CConf &cConf) const;

    /*=============================================================================
    函 数 名:GetAt
    功    能:获取会议
    参    数:u32 dwConfSN                       [in]    会议索引号
             CConf &cConf                       [out]   会议
    注    意:无
    返 回 值:会议存在: TRUE; 不存在: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetAt(u32 dwConfSN, CConf &cConf) const;

    /*=============================================================================
    函 数 名:SetAt
    功    能:设置会议表
    参    数:CConf &cConf                       [in]    会议
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    void SetAt(CConf &cConf);

    /*=============================================================================
    函 数 名:operator-=
    功    能:从会议表中删除一个会议
    参    数:const CConfId &cConfId             [in]    会议号
    注    意:无
    返 回 值:会议列表
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    CConfTable& operator-=(const CConfId &cConfId);

    /*=============================================================================
    函 数 名:IsExist
    功    能:判断会议在会议表中是否存在
    参    数:const CConfId &cConfId             [in]    会议号
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsExist(const CConfId &cConfId) const;

    /*=============================================================================
    函 数 名:IsExist
    功    能:判断会议在会议表中是否存在
    参    数:u32 dwConfSN                        [in]    会议索引号
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsExist(u32 dwConfSN) const;

    /*=============================================================================
    函 数 名:IsEmpty
    功    能:判断会议表中是否为空
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsEmpty(void) const { return (m_nConfNum == 0); }

    /*=============================================================================
    函 数 名:ClearContent
    功    能:清除会议表中的所有项
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
	void ClearContent(void);

    /*=======================================================================
    函 数 名:GetNextNoInitValueConfId
    功    能:得到下一个还没有得到初始信息的会议ID, 初始信息包括独享、
             终端状态列表、别名、下级MCU锁定状态
    参    数:无
    注    意:无
    返 回 值:会议号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =======================================================================*/
    const CConfId GetNextNoInitValueConfId(void);

    /*=======================================================================
    函 数 名:GetNewConfSN
    功    能:得到会议的序列号,每次调用都会得到一个新的号码
    参    数:无
    注    意:无
    返 回 值:新的序列号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =======================================================================*/
    static u32 GetNewConfSN(void) { return ++s_dwConfSN; }

    /*=============================================================================
    函 数 名:GetAllConfId
    功    能:获取所有会议号
    参    数:CConfId *pcConfId                  [out]   会议号数组
             s32 nNum                           [in/out]    数组大小/会议个数
    注    意:无论成功与否, 数组大小都会置成会议个数
    返 回 值:数组大小小于会议个数: FALSE; 成功: TRUE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetAllConfId(CConfId *pcConfId, s32 &nNum);

    /*=============================================================================
    函 数 名:GetAllConfSN
    功    能:获取所有会议索引号
    参    数:u32 *pdwConfSN                     [out]   会议索引号数组
             s32 nNum                           [in/out]    数组大小/会议个数
    注    意:无论成功与否, 数组大小都会置成会议个数
    返 回 值:数组大小小于会议个数: FALSE; 成功: TRUE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/06/03  4.0     王昊    创建
    =============================================================================*/
    BOOL32 GetAllConfSN(u32 *pdwConfSN, s32 nNum);

public:
    CConf       m_acConf[MAXNUM_MCU_CONF];          //  所有会议列表
    s32         m_nConfNum;                         //  会议个数

private:
    u8          m_abyConfExist[MAXNUM_MCU_CONF];    //  数组里是否有会议
    static u32  s_dwConfSN;                         //  会议递增序号
};

// 会议调度组
class CVcsGroup
{
public:
    CVcsGroup()
    {
        ZeroMemory( &m_tVcsGroupInfo, sizeof(m_tVcsGroupInfo) );
    }

    void AddEntry( TVCSEntryInfo &tEntry )
    {
        m_vctVcsEntry.push_back( tEntry );
        m_tVcsGroupInfo.dwEntryNum = m_vctVcsEntry.size();
    }
    void DelEntry( TVCSEntryInfo &tEntry )
    {
	    vector<TVCSEntryInfo>::iterator itr = m_vctVcsEntry.begin();
	    for ( ; itr != m_vctVcsEntry.end();  )
	    {
		    if ( strcmp( tEntry.achEntryName, (*itr).achEntryName ) == 0 && tEntry.byEntryType == (*itr).byEntryType )
		    {
			    m_vctVcsEntry.erase( itr );
			    continue;
		    }
            itr++;
	    }

        m_tVcsGroupInfo.dwEntryNum = m_vctVcsEntry.size();
    }
    inline CVcsGroup& operator=( const CVcsGroup &cGroup )
    {
        strcpy( m_tVcsGroupInfo.achGroupName, cGroup.m_tVcsGroupInfo.achGroupName );
        m_tVcsGroupInfo.dwEntryNum = cGroup.m_tVcsGroupInfo.dwEntryNum;
        m_vctVcsEntry = cGroup.m_vctVcsEntry;

        return (*this);
    }

    TVCSGroupInfo   m_tVcsGroupInfo;
    vector<TVCSEntryInfo>   m_vctVcsEntry;
};

//会议模板/预约会议
class CTemSchConf : public TConfInfo
{
public:
    CTemSchConf() : m_tplMt(0, MTTABLE_STEP), m_bExist(FALSE), m_tplSubMcu(0, MTTABLE_STEP), m_wPollTime(6) {}
    CTemSchConf(const CTemSchConf &cTemSchConf);
    ~CTemSchConf() { m_tplMt.Clear();   m_tplSubMcu.Clear();    m_vctGroup.clear(); m_vctHduModChn.clear(); }

    CTemSchConf& operator=(const CTemSchConf &cTemSchConf);

    /*=============================================================================
    函 数 名:SetNull
    功    能:会议模板置空
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/22  4.0     王昊    创建
    =============================================================================*/
    inline void SetNull(void);

    /*=============================================================================
    函 数 名:IsExist
    功    能:会议是否存在
    参    数:无
    注    意:无
    返 回 值:存在:TRUE; 不存在: FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/22  4.0     王昊    创建
    =============================================================================*/
    BOOL32 IsExist(void) const { return m_bExist; }

    /*=============================================================================
    函 数 名:SetConfInfo
    功    能:设置会议信息
    参    数:const TConfInfo &tConfInfo         [in]    会议信息
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/22  4.0     王昊    创建
    =============================================================================*/
    inline void SetConfInfo(const TConfInfo &tConfInfo)
    {
        *dynamic_cast<TConfInfo*>(this) = tConfInfo;
        m_bExist = TRUE;
    }

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:打印
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/23  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void);

public:
    BOOL32                  m_bExist;       //会议模板是否存在
    TplArray<TAddMtInfo>    m_tplMt;        //终端列表
    // 顾振华@2006.02.14 电视墙模板支持多个电视墙
    TMultiTvWallModule      m_tTWModules;  //电视墙模板
    TVmpModule              m_tVmpModule;   //画面合成模板
	

    //准备未来支持多画面电视墙模版
    //TVmpModule            mtVmpTwModule;  /多画面电视墙模版

    // 会议调度专用
    TplArray<TAddMtInfo>    m_tplSubMcu;    // 下级MCU列表
    vector<CVcsGroup>       m_vctGroup;     // 会议调度组列表
    THDTvWall               m_tHdTvwall;    // 高清终端作为电视墙
    vector<THduModChnlInfo> m_vctHduModChn; // Hdu通道信息
    
    u16                     m_wPollTime;    //轮询时间
};

//预约会议/会议模板列表
//注意: 存储未必连续, 查找需要循环到底
class CConfTemSchTable
{
public:
    CConfTemSchTable() {};
    CConfTemSchTable(const CConfTemSchTable &cConfTemSchTable);
    ~CConfTemSchTable() {};

    CConfTemSchTable& operator=(const CConfTemSchTable &cConfTemSchTable);

    /*=============================================================================
    函 数 名:ReleaseConf
    功    能:清空指定会议
    参    数:const CConfId &cConfId             [in]    会议号
             u8 byTakeMode  [in]    CONF_TAKEMODE_SCHEDULED/CONF_TAKEMODE_TEMPLATE
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/23  4.0     王昊    创建
    =============================================================================*/
    BOOL32 ReleaseConf(const CConfId &cConfId, u8 byTakeMode);

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:打印
    参    数:u8 byTakeMode      [in]    CONF_TAKEMODE_SCHEDULED/CONF_TAKEMODE_TEMPLATE
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/23  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(u8 byTakeMode);

    /*=============================================================================
    函 数 名:Clear
    功    能:清空
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/11/24  4.0     王昊    创建
    =============================================================================*/
    void Clear(void);

public:
    CTemSchConf m_acConfTemplate[MAXNUM_MCU_CONF];  //会议模板数组
    CTemSchConf m_acScheduleConf[MAXNUM_MCU_CONF];  //预约会议数组
};

//CUserTable用户管理，用一个TplArray存放所用的用户信息
class CUserTable
{
public:
    CUserTable() { Clear(); }

    /*=============================================================================
    函 数 名:CUserTable
    功    能:拷贝构造函数
    参    数:const CUserTable &cUserTable       [in]    要复制的用户列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	CUserTable(const CUserTable &cUserTable);

    virtual ~CUserTable() { Clear(); }

    /*=============================================================================
    函 数 名:IsEmpty
    功    能:判断用户表是否为空
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 IsEmpty(void) const;

    /*=============================================================================
    函 数 名:IsExist
    功    能:判断给定用户是否在表中存在
    参    数:LPCTSTR pszUserName                [in]    用户名
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 IsExist(LPCTSTR pszUserName) const;

    /*=============================================================================
    函 数 名:operator=
    功    能:重载运算符=
    参    数:const CUserTable &cUserTable       [in]    用于赋值的用户表
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    const CUserTable& operator=(const CUserTable &cUserTable);

    /*=============================================================================
    函 数 名:operator[]
    功    能:重载运算符[]
    参    数:s32 nIndex                         [in]    用户在列表中的索引
    注    意:无
    返 回 值:const CUserFullInfo&   返回指定的用户信息
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	const CExUsrInfo& operator[](s32 nIndex) const;

	const CExUsrInfo& GetUserAt(s32 nIndex) const;

    /*=============================================================================
    函 数 名:GetUser
    功    能:取得指定名称的用户信息
    参    数:LPCTSTR pszUserName                [in]    要获取的用户的名字
             CUserFullInfo * const pcUserInfo   [out]   填充的用户信息
    注    意:无
    返 回 值:成功返回TRUE, 用户不存在读取失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 GetUser(LPCTSTR pszUserName, CExUsrInfo * const pcUserInfo) const;

    /*=============================================================================
    函 数 名:SetUser
    功    能:向列表中增加用户，如果用户不存在则直接加入，如果用户已存在，则更新用户信息
    参    数:const CUserFullInfo &cUserInfo     [in]    要加入的用户信息
    注    意:无
    返 回 值:TRUE表示成功，FALSE表示失败
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 SetUser(const CExUsrInfo &cUserInfo);

    /*=============================================================================
    函 数 名:DelUser
    功    能:删除指定用户
    参    数:LPCTSTR lptrUserName               [in]    要删除的用户
    注    意:无
    返 回 值:成功返回TRUE，用户不存在或失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 DelUser(LPCTSTR lptrUserName);

    /*=============================================================================
    函 数 名:GetUserNum
    功    能:得到当前用户表中的用户个数
    参    数:无
    注    意:无
    返 回 值:用户的个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	s32 GetUserNum(void) const;

    /*=============================================================================
    函 数 名:GetAllUser
    功    能:得到表中所有用户的信息
    参    数:CUserFullInfo *pcUserArray         [out]   用户信息数组
             s32 &nNum                          [in/out]传入的数组大小/实际填充的用户个数
    注    意:无
    返 回 值:成功返回TRUE，失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 GetAllUser(CExUsrInfo *pcUserArray, s32 &nNum);

    /*=============================================================================
    函 数 名:Clear
    功    能:清空整个列表
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    inline void Clear(void) { m_tplUserFullInfo.Clear(); }

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:将所有的用户信息打印出来
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void);

protected:
	TplArray<CExUsrInfo> m_tplUserFullInfo;

//#ifdef _DEBUG
//public:
//    /*=============================================================================
//    函 数 名:Dump
//    功    能:打印本类的成员调试信息
//    参    数:CDumpContext &dc                   [in]    打印头
//    注    意:无
//    返 回 值:无
//    -------------------------------------------------------------------------------
//    修改纪录:
//    日      期  版本    修改人  修改内容
//    2005/04/26  4.0     王昊    创建
//    =============================================================================*/
//    virtual void Dump(CDumpContext &dc) const;
//#endif  //  _DEBUG
};

class CVcsUserTable
{
public:
    CVcsUserTable() { Clear(); }

    /*=============================================================================
    函 数 名:CUserTable
    功    能:拷贝构造函数
    参    数:const CUserTable &cUserTable       [in]    要复制的用户列表
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	CVcsUserTable(const CVcsUserTable &cUserTable);

    virtual ~CVcsUserTable() { Clear(); }

    /*=============================================================================
    函 数 名:IsEmpty
    功    能:判断用户表是否为空
    参    数:无
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 IsEmpty(void) const;

    /*=============================================================================
    函 数 名:IsExist
    功    能:判断给定用户是否在表中存在
    参    数:LPCTSTR pszUserName                [in]    用户名
    注    意:无
    返 回 值:BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 IsExist(LPCTSTR pszUserName) const;

    /*=============================================================================
    函 数 名:operator=
    功    能:重载运算符=
    参    数:const CUserTable &cUserTable       [in]    用于赋值的用户表
    注    意:无
    返 回 值:this
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    const CVcsUserTable& operator=(const CVcsUserTable &cUserTable);

    /*=============================================================================
    函 数 名:operator[]
    功    能:重载运算符[]
    参    数:s32 nIndex                         [in]    用户在列表中的索引
    注    意:无
    返 回 值:const CUserFullInfo&   返回指定的用户信息
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	const CVCSUsrInfo& operator[](s32 nIndex) const;

	const CVCSUsrInfo& GetUserAt(s32 nIndex) const;

    /*=============================================================================
    函 数 名:GetUser
    功    能:取得指定名称的用户信息
    参    数:LPCTSTR pszUserName                [in]    要获取的用户的名字
             CUserFullInfo * const pcUserInfo   [out]   填充的用户信息
    注    意:无
    返 回 值:成功返回TRUE, 用户不存在读取失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 GetUser(LPCTSTR pszUserName, CVCSUsrInfo * const pcUserInfo) const;

    /*=============================================================================
    函 数 名:SetUser
    功    能:向列表中增加用户，如果用户不存在则直接加入，如果用户已存在，则更新用户信息
    参    数:const CUserFullInfo &cUserInfo     [in]    要加入的用户信息
    注    意:无
    返 回 值:TRUE表示成功，FALSE表示失败
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 SetUser(const CVCSUsrInfo &cUserInfo);

    /*=============================================================================
    函 数 名:DelUser
    功    能:删除指定用户
    参    数:LPCTSTR lptrUserName               [in]    要删除的用户
    注    意:无
    返 回 值:成功返回TRUE，用户不存在或失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 DelUser(LPCTSTR lptrUserName);

    /*=============================================================================
    函 数 名:GetUserNum
    功    能:得到当前用户表中的用户个数
    参    数:无
    注    意:无
    返 回 值:用户的个数
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	s32 GetUserNum(void) const;

    /*=============================================================================
    函 数 名:GetAllUser
    功    能:得到表中所有用户的信息
    参    数:CUserFullInfo *pcUserArray         [out]   用户信息数组
             s32 &nNum                          [in/out]传入的数组大小/实际填充的用户个数
    注    意:无
    返 回 值:成功返回TRUE，失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 GetAllUser(CVCSUsrInfo *pcUserArray, s32 &nNum);

    /*=============================================================================
    函 数 名:Clear
    功    能:清空整个列表
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    inline void Clear(void) { m_tplUserFullInfo.Clear(); }

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:将所有的用户信息打印出来
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void);

protected:
	TplArray<CVCSUsrInfo> m_tplUserFullInfo;

//#ifdef _DEBUG
//public:
//    /*=============================================================================
//    函 数 名:Dump
//    功    能:打印本类的成员调试信息
//    参    数:CDumpContext &dc                   [in]    打印头
//    注    意:无
//    返 回 值:无
//    -------------------------------------------------------------------------------
//    修改纪录:
//    日      期  版本    修改人  修改内容
//    2005/04/26  4.0     王昊    创建
//    =============================================================================*/
//    virtual void Dump(CDumpContext &dc) const;
//#endif  //  _DEBUG
};

//用来管理用户组的信息,保存为一个tplarray
class CUserGroupTable
{
public:
	CUserGroupTable();
	virtual ~CUserGroupTable();
    /*函数名： CUserGroupTable
    功    能： 拷贝构造函数
    参    数： const CUserGroupTable& rhs
    返 回 值： 
    说    明： */
	CUserGroupTable(const CUserGroupTable& rhs);
    /*函数名： operator=
    功    能： 赋值函数
    参    数： const CUserGroupTable &rhs
    返 回 值： CUserGroupTable& 
    说    明： */
	CUserGroupTable& operator=(const CUserGroupTable &rhs);
    /*函数名： AddUserGroup
    功    能： 增加一个用户组信息,如果用户组信息已经存在的话就覆盖
    参    数： const TUsrGrpInfo& tUserGroupInfo
    返 回 值： BOOL     如果行为是增加,返回TRUE, 如果行为是覆盖,返回FALSE
    说    明： */
	BOOL AddUserGroup( const TUsrGrpInfo& tUserGroupInfo );
    /*函数名： DelUserGroup
    功    能： 删除一个用户组的信息
    参    数： u8 byGroupId		[in] 用户组的ID
    返 回 值： BOOL     成功返回TRUE,失败返回FALSE
    说    明： */
	BOOL DelUserGroup( u8 byGroupId );
    /*函数名： GetUserGroupNum
    功    能： 获取用户组信息的数目
    参    数： 
    返 回 值： s32		用户组信息的数目
    说    明： */
	s32 GetUserGroupNum() const
	{
		return m_tplUserGroupInfo.Size();
	}
    /*函数名： ModifyUserGroup
    功    能： 修改用户组信息
    参    数： const TUsrGrpInfo& tUserGroupInfo	[in]用户组信息
    返 回 值： BOOL			如果修改成功就返回TRUE,否则返回False
    说    明： */
	BOOL ModifyUserGroup( const TUsrGrpInfo& tUserGroupInfo );
    /*函数名： GetUserGroup
    功    能： 根据用户组ID返回用户组信息
    参    数： u8 byGroupId			[in]用户组ID
    返 回 值： const TUsrGrpInfo&		用户组信息
    说    明： */
	const TUsrGrpInfo& GetUserGroup( u8 byGroupId ) const;
    /*函数名： GetAllUserGroup
    功    能： 返回全部的用户组信息
    参    数：  TUsrGrpInfo* ptUserGroup			[in/out]传入的数组的起始地址
               s32& nNum							[in/out]传入数组的大小/传出实际返回的大小
    返 回 值： BOOL			如果返回了全部信息，则为True，否则为False
    说    明： */
	BOOL GetAllUserGroup( TUsrGrpInfo* ptUserGroup, s32& nNum ) const;
    /*函数名： GroupClear
    功    能： 用户组信息清空
    参    数： 
    返 回 值： void 
    说    明： */
	void GroupClear() { m_tplUserGroupInfo.Clear(); } 
    /*函数名： GroupIsExist
    功    能： 指定用户组ID的用户组信息是否存在
    参    数： u8 byGroupId			[in]用户组的ID
    返 回 值： BOOL 
    说    明： */
	BOOL GroupIsExist( u8 byGroupId ) const;
    /*函数名： GetUserGroupAt
    功    能： 根据在tplarray的索引来返回用户组的信息
    参    数： u32 dwIndex			[in]索引信息
    返 回 值： const TUsrGrpInfo&	用户组信息
    说    明： */
	const TUsrGrpInfo& GetUserGroupAt( u32 dwIndex ) const;
    /*函数名： operator[]
    功    能： 重载[]下标运算符，和GetUserGroupAt()的功能一致
    参    数： s32 dwIndex			[in]索引信息
    返 回 值： TUsrGrpInfo&			用户组信息
    说    明： */
	TUsrGrpInfo& operator[](s32 dwIndex);
    /*函数名： operator[]
    功    能： 重载[]下标运算符，和GetUserGroupAt()的功能一致(const 版本)
    参    数： s32 dwIndex			[in]索引信息
    返 回 值： const TUsrGrpInfo&	用户组信息
    说    明： */
	const TUsrGrpInfo& operator[](s32 dwIndex )const ; 

    /*函数名： GrpPrintInfo
    功    能： 打印内部的信息
    参    数： void
    返 回 值： void 
    说    明： */
	void GrpPrintInfo( void ) const;

protected:
	TplArray<TUsrGrpInfo>	m_tplUserGroupInfo;		//保存用户组列表
};

//用来统一管理用户和用户组的信息,严格的来说是属于has a的关系, 这里使用
//Mutil-inheritance 是为了直接使用它们的方法
class CUserManage : public CUserTable,
					public CUserGroupTable
	
{
public:
	CUserManage();
	~CUserManage();
    /*函数名： GetGroupAllUser
    功    能： 根据用户组ID返回这个用户组里面所有用户的信息
    参    数：  u8 byGrpId				[in]用户组ID信息
               CExUsrInfo *pcUserInfo	[in/out]用户信息指针
               s32 &nNum				[in/out]传入数组指针的大小/实际返回的数目
    返 回 值： BOOL		得到全部信息返回True,如果传入的数组太小,导致返回部分信息则为FALSE
    说    明： */
	BOOL GetGroupAllUser( u8 byGrpId, CExUsrInfo *pcUserInfo, s32 &nNum ) const ;
    /*函数名： CUserManage
    功    能： 拷贝构造函数
    参    数： const CUserManage& rhs
    返 回 值： 
    说    明： */
	CUserManage( const CUserManage& rhs );
    /*函数名： operator=
    功    能： 重载赋值运算符
    参    数： const CUserManage& rhs
    返 回 值： CUserManage& 
    说    明： */
	CUserManage& operator=(const CUserManage& rhs);

    /*函数名： Print
    功    能： 打印内部信息
    参    数： void
    返 回 值： void 
    说    明： */
	void Print(void) const; 
	
private:
    /*函数名： Init
    功    能： 初始化信息
    参    数： const CUserManage& rhs		[in]另外的一个用户管理组信息
    返 回 值： void 
    说    明： */
	void Init(const CUserManage& rhs);
};

class CVcsUserManage : public CVcsUserTable,
					   public CUserGroupTable
	
{
public:
	CVcsUserManage();
	~CVcsUserManage();
    /*函数名： GetGroupAllUser
    功    能： 根据用户组ID返回这个用户组里面所有用户的信息
    参    数：  u8 byGrpId				[in]用户组ID信息
               CExUsrInfo *pcUserInfo	[in/out]用户信息指针
               s32 &nNum				[in/out]传入数组指针的大小/实际返回的数目
    返 回 值： BOOL		得到全部信息返回True,如果传入的数组太小,导致返回部分信息则为FALSE
    说    明： */
	BOOL GetGroupAllUser( u8 byGrpId, CVCSUsrInfo *pcUserInfo, s32 &nNum ) const ;
    /*函数名： CUserManage
    功    能： 拷贝构造函数
    参    数： const CUserManage& rhs
    返 回 值： 
    说    明： */
	CVcsUserManage( const CVcsUserManage& rhs );
    /*函数名： operator=
    功    能： 重载赋值运算符
    参    数： const CUserManage& rhs
    返 回 值： CUserManage& 
    说    明： */
	CVcsUserManage& operator=(const CVcsUserManage& rhs);

    /*函数名： Print
    功    能： 打印内部信息
    参    数： void
    返 回 值： void 
    说    明： */
	void Print(void) const; 
	
private:
    /*函数名： Init
    功    能： 初始化信息
    参    数： const CUserManage& rhs		[in]另外的一个用户管理组信息
    返 回 值： void 
    说    明： */
	void Init(const CVcsUserManage& rhs);
};

//CPeriTable将MCU外设统一保存为一个TplArray
class CPeriTable
{
public:
    CPeriTable();

    /*=============================================================================
    函 数 名:ClearContent
    功    能:清除所有外设数据
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	void ClearContent(void);

    /*=============================================================================
    函 数 名:SetAt
    功    能:加入或刷新外设状态
    参    数:const TPeriEqpStatus &tPeriEqpStatus   [in]    外设状态
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	void SetAt(const TPeriEqpStatus &tPeriEqpStatus);

    /*=============================================================================
    函 数 名:GetAt
    功    能:获取指定外设状态
    参    数:const TEqp &tEqp                   [in]    指定外设
             TPeriEqpStatus &tPeriEqpStatus     [out]   外设状态
    注    意:无
    返 回 值:成功返回TRUE, 失败返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
	BOOL32 GetAt(const TEqp &tEqp, TPeriEqpStatus &tPeriEqpStatus) const;

    /*=============================================================================
    函 数 名:SetEqpIP
    功    能:设置外设IP
    参    数:const TEqp &tEqp                   [in]    指定外设
             s32 dwIP                           [in]    外设的IP
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    void SetEqpIP(const TEqp &tEqp, u32 dwIP);

    /*=============================================================================
    函 数 名:GetEqpIP
    功    能:查找外设的IP
    参    数:const TEqp &tEqp                   [in]    指定外设
    注    意:无
    返 回 值:外设IP
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/04/26  4.0     王昊    创建
    =============================================================================*/
    u32 GetEqpIP(const TEqp &tEqp) const;


    /*函数名： SetDcsIP
    功    能： 设置DCS的IP地址
    参    数：  const TEqp &tEqp  [in] DCS的终端标示
               u32 dwIP			  [in] Dcs的IP地址
    返 回 值： void 
    说    明： */
	void SetDcsIP( const TEqp &tEqp, u32 dwIP );
    /*函数名： GetDcsIP
    功    能： 获得dcs的IP地址 
    参    数： const TEqp &tEqp
    返 回 值： u32 
    说    明： */
	u32 GetDcsIP( const TEqp &tEqp );
    /*函数名： SetDcsStatus
    功    能： 设置DCS的状态
    参    数： const TPeriDcsStatus &tDcsStatus  [in] DCS状态
    返 回 值： void 
    说    明： */
	void SetDcsStatus( TPeriDcsStatus &tDcsStatus );
    /*函数名： GetDcsStatus
    功    能： 获取DCS的状态 
    参    数：  const TEqp &tEqp				[in] DCS终端标识
               TPeriEqpStatus &tDcsStatus		[out] Dcs的状态
    返 回 值： BOOL
    说    明： */
	BOOL GetDcsStatus( const TEqp &tEqp, TPeriDcsStatus &tDcsStatus );

    /*=============================================================================
    函 数 名:PrintInfo
    功    能:将所有的外设打印出来
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/05/19  4.0     王昊    创建
    =============================================================================*/
    void PrintInfo(void) const;

public:
    u32     m_adwEqpIP[MAXNUM_MCU_PERIEQP];     //  外设IP
	u32		m_adwDcsIP[MAXNUM_MCU_DCS];

    TplArray<TPeriEqpStatus> m_tplRecorder;     //  保存当前MCU所有录放像机状态
    TplArray<TPeriEqpStatus> m_tplMixer;        //  保存当前MCU所有混音器状态
    TplArray<TPeriEqpStatus> m_tplVmper;        //  保存当前MCU所有视频复合器状态
    TplArray<TPeriEqpStatus> m_tplTvWall;       //  保存当前MCU所有电视墙状态
    TplArray<TPeriEqpStatus> m_tplHDTvWall;     //  保存当前MCU所有高清电视墙状态
    TplArray<TPeriEqpStatus> m_tplAdapter;      //  保存当前MCU所有码流适配器状态
    TplArray<TPeriEqpStatus> m_tplPrsPerCher;   //  保存当前MCU所有重传器状态
    TplArray<TPeriEqpStatus> m_tplMultiTvWall;  //  保存当前MCU所有多画面电视墙状态
	// lrf DCS Status [6/12/2006]
	TplArray<TPeriDcsStatus> m_tplDcs;			//	保存当前MCU所有DCS状态
};

//  空信息
typedef struct tagNull
{
    tagNull()
    {
        tNullMt.SetNull();
        ZeroMemory(&cNullUser, sizeof (cNullUser));
        ZeroMemory(&cNullVcsUser, sizeof (cNullVcsUser));
		ZeroMemory(&tNullUserGrp, sizeof(tNullUserGrp) );
        cNullMtAlias.SetNull();
        cNullConfId.SetNull();
        ZeroMemory(&cNullMixParam, sizeof (cNullMixParam));
    }
    TMt         tNullMt;
    CMt         cNullMt;
    CConfId     cNullConfId;
    CConf       cNullConf;
    CExUsrInfo   cNullUser;
    CVCSUsrInfo cNullVcsUser;
	TUsrGrpInfo		tNullUserGrp;
    CSingleMcuInfo  cNullSingleMcuInfo;
    TMtAlias    cNullMtAlias;
    TMixParam cNullMixParam;
} TNull;

extern TNull g_tNull;

//CMsgHeadInfo封装与MCU OSP通信消息的消息头
class CMsgHeadInfo
{
public:
    CMsgHeadInfo() : m_wSerialNo( 0 ),
					m_byMCUID( LOCAL_MCUID ),
					m_bySessionID( 0 ),
					m_cConfId( g_tNull.cNullConfId ),
					m_wEventID( 0 ),
					m_wDelayTime( DELAY_TIME_DEFAULT ),
					m_wLength( 0 ),
					m_byChannelIndex( 0 ),
					m_byMask( 0 ) {}

    CMsgHeadInfo( u16 wEventId, u16 wDelayTime, u16 wLen,
                  const CConfId *pcConfId = NULL );

//CMsgHeadInfo中那些位有效
#define MASK_CHNINDEX			(u8)0x01
#define MASK_MCUID				(u8)0x02
#define MASK_MTID				(u8)0x04
#define MASK_SESSIONID			(u8)0x08
#define MASK_CONFID				(u8)0x10
#define MASK_EVENTID			(u8)0x20
#define MASK_DELAYTIME			(u8)0x40
#define MASK_LENGTH				(u8)0x80

public:
    /*=============================================================================
    函 数 名:+=
    功    能:更新消息头
    参    数:CMsgHeadInfo &cLeft                [in/out]    被加消息头
             CMsgHeadInfo &cRight               [in]        加入消息头
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    friend CMsgHeadInfo& operator+=(CMsgHeadInfo &cLeft, CMsgHeadInfo &cRight);

    /*=============================================================================
    函 数 名:IncreaseSerialNo
    功    能:递加消息流水号
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void IncreaseSerialNo(void) { m_wSerialNo++; }

    /*=============================================================================
    函 数 名:GetSerialNo
    功    能:得到流水号
    参    数:无
    注    意:无
    返 回 值:当前信息流水号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u16 GetSerialNo(void) const { return m_wSerialNo; }

    /*=============================================================================
    函 数 名:SetMCUID
    功    能:设定目标MCUID，并置位有效
    参    数:u16 wMcuId                         [in]    MCU ID
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetMCUID(u8 byMcuId) { m_byMCUID = byMcuId; AddMask(MASK_MCUID); }

    /*=============================================================================
    函 数 名:GetMCUID
    功    能:得到目标MCUID
    参    数:无
    注    意:无
    返 回 值:目标MCU ID
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u8 GetMCUID(void) { return ( Avail(MASK_MCUID) ? m_byMCUID : 0 ); }

    /*=============================================================================
    函 数 名:SetSessionID
    功    能:设定会话实例号
    参    数:u8 bySessionId                     [in]    会话实例号
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetSessionID(u8 bySessionId)
    { m_bySessionID = bySessionId; AddMask(MASK_SESSIONID); }

    /*=============================================================================
    函 数 名:GetSessionID
    功    能:得到会话实例号
    参    数:无
    注    意:无
    返 回 值:会话实例号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u8 GetSessionID(void) { return (Avail(MASK_SESSIONID) ? m_bySessionID : 0); }

    /*=============================================================================
    函 数 名:SetConfID
    功    能:设置会议号
    参    数:CConfId cConfId                    [in]    会议号
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetConfID(CConfId cConfId) { m_cConfId = cConfId; AddMask(MASK_CONFID); }

    /*=============================================================================
    函 数 名:GetConfID
    功    能:得到会议号
    参    数:无
    注    意:无
    返 回 值:会议号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    CConfId& GetConfID(void)
    { return (Avail(MASK_CONFID) ? m_cConfId : g_tNull.cNullConfId); }

    /*=============================================================================
    函 数 名:SetEventID
    功    能:设置事件号
    参    数:u16 wEventId                       [in]    事件号
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetEventID(u16 wEventId) { m_wEventID = wEventId; AddMask(MASK_EVENTID); }

    /*=============================================================================
    函 数 名:GetEventID
    功    能:得到事件号
    参    数:无
    注    意:无
    返 回 值:事件号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u16 GetEventID(void) { return (Avail(MASK_EVENTID) ? m_wEventID : 0); }

    /*=============================================================================
    函 数 名:SetDelayTime
    功    能:设置MCU等待回复时间
    参    数:u16 wDelayTime                     [in]    等待时间
    注    意:MCU实际是根据该时间是否大于0来判断消息是请求消息还是命令消息，
	         因此发送REQ消息此项必须不为0，发送CMD消息此项必须为0
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetDelayTime(u16 wDelayTime)
    { m_wDelayTime = wDelayTime; AddMask(MASK_DELAYTIME); }

    /*=============================================================================
    函 数 名:GetDelayTime
    功    能:获取超时时间
    参    数:无
    注    意:无
    返 回 值:超时时间
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u16 GetDelayTime(void) { return (Avail(MASK_DELAYTIME) ? m_wDelayTime : 0); }

    /*=============================================================================
    函 数 名:SetLength
    功    能:设置消息体长度
    参    数:u16 wMsgLen                        [in]    消息体长度
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetLength(u16 wMsgLen) { m_wLength = wMsgLen; AddMask(MASK_LENGTH); }

    /*=============================================================================
    函 数 名:GetLength
    功    能:设置消息体长度
    参    数:无
    注    意:无
    返 回 值:消息体长度
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u16 GetLength(void) { return (Avail(MASK_LENGTH) ? m_wLength : 0); }

    /*=============================================================================
    函 数 名:SetChannelIndex
    功    能:设置通道号(外设操作时比较重要)
    参    数:u8 byChannelIndex                  [in]    通道号
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void SetChannelIndex(u8 byChannelIndex)
    { m_byChannelIndex = byChannelIndex; AddMask(MASK_CHNINDEX); }

    /*=============================================================================
    函 数 名:GetChannelIndex
    功    能:得到通道号
    参    数:无
    注    意:无
    返 回 值:通道号
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    u8 GetChannelIndex(void)
    { return (Avail(MASK_CHNINDEX) ? m_byChannelIndex : 0); }

private:
    /*=============================================================================
    函 数 名:AddMask
    功    能:设置有效位
    参    数:u8 byMask                          [in]    有效位
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    void AddMask(u8 byMask) { m_byMask = m_byMask | byMask; }

    /*=============================================================================
    函 数 名:Avail
    功    能:判断位是否有效
    参    数:u8 byByte                          [in]    传入位
    注    意:无
    返 回 值:是否有效
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/07/05  4.0     王昊    创建
    =============================================================================*/
    BOOL32 Avail(u8 byByte) { return ( ( byByte & m_byMask ) == byByte ); }

private:
    u16	    m_wSerialNo;            // 消息流水号
    u8	    m_byMCUID;              // 定位目的MCU
    u8	    m_bySessionID;          // 会话实例号
    CConfId	m_cConfId;              // 会议号
    u16	    m_wEventID;             // 事件号
    u16	    m_wDelayTime;           // 等待时延（单位：秒）
    u16	    m_wLength;              // 消息体长度
    u8	    m_byChannelIndex;       // 通道索引号
    u8	    m_byMask;               // 消息头中的哪些信息是有效的
};

//#ifdef _DEBUG
///*=======================================================================
//函 数 名:Dump
//功    能:打印类的成员调试信息
//参    数:无需说明
//注    意:无
//返 回 值:无
//-------------------------------------------------------------------------
//修改纪录:
//日      期  版本    修改人  修改内容
//2004/03/19  3.0     李洪强  创建
//=======================================================================*/
//void Dump(const TMt &tMt,                       CDumpContext &dc);
//void Dump(const TMtExt &tMtExt,                 CDumpContext &dc);
//void Dump(const TMtStatus &tMtStatus,           CDumpContext &dc);
//void Dump(const TMtAlias &tMtAlias,             CDumpContext &dc);
//void Dump(const TTransportAddr &tTransportAddr, CDumpContext &dc);
//void Dump(const CUserFullInfo &cUserFullInfo,   CDumpContext &dc);
//#endif  //  _DEBUG



// 保存单个MCU的配置界面化信息
class CMcuCfg : public TMcuExt
{
public:
    /*=============================================================================
    函 数 名:CMcuCfg
    功    能:
    参    数:
    注    意:无
    返 回 值:
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/09/09	4.0		顾振华	创建
    2006/02/17  4.0     顾振华  从界面移动到lib保存
    =============================================================================*/
	CMcuCfg()
    {
        Clear();
    }
    ~CMcuCfg()
    {
        Clear();
    }

    // 从 TMcuExt 结构复制
    CMcuCfg& operator =(const TMcuExt &tMcuExt);

	CMcuCfg& operator =(const TMcuEqpCfg &tEqp);

	CMcuCfg& operator =(const TMcuGeneralCfg &tGeneral);

	void SetBrdCfg(s32 nNum, CBrdCfg* pcBrdCfg) ;
	void SetRecCfg(s32 nNum, TEqpRecCfgInfo* pcRecCfg) ;
    void SetHDBasCfg(s32 nNum, TEqpBasHDCfgInfo* pcHDBasCfg);
    void SetHDUStyleCfg(s32 nNum, THduStyleCfgInfo* pcHduStyleCfg);

    // 根据MCU上报更新单板状态，如果没有找到则返回FALSE
    BOOL32 UpdateBrdStatus(TBoardStatusNotify* const ptStatus) ;
    
	void SetInited(BOOL32 bInit = TRUE)
	{
		m_bInit = bInit;
	}
    BOOL32 IsInited()
    {
        return m_bInit;
    }
    void Clear()
    {
        ZeroMemory(this, sizeof(TMcuExt));
        ZeroMemory(&m_tEqp, sizeof(TMcuEqpCfg));
        ZeroMemory(&m_tGeneral, sizeof(TMcuGeneralCfg));
        m_tplBrdCfg.Clear();
        m_tplRecCfg.Clear();
        m_tplHDBasCfg.Clear();
        SetInited(FALSE);
    }
	
    // 打印调试信息
	void PrintInfo();

    
public:
    BOOL32              m_bInit;           // FALSE 表示本Mcu还未获取信息
    
    TMcuEqpCfg          m_tEqp;
    TMcuGeneralCfg      m_tGeneral;
    TplArray<THduStyleCfgInfo> m_tplHduStyleCfgInfo; //xts20090120HDU预案配置信息	
    TplArray<CBrdCfg>   m_tplBrdCfg;    
    TplArray<TEqpRecCfgInfo> m_tplRecCfg;   // 录像机配置
    TplArray<TEqpBasHDCfgInfo> m_tplHDBasCfg;   // 高清BAS板配置 
};

///////////////////////////////////////////////////////////////////////////////
// CMtUtility

/*=============================================================================
函 数 名:GetMcuId
功    能:根据u16得到McuID
参    数:u16 wID                            [in]    u16
注    意:无
返 回 值:McuID
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline u8 CMtUtility::GetMcuId(u16 wID)
{
    return HIBYTE(wID);
}

/*=============================================================================
函 数 名:GetMtId
功    能:根据u16得到MtID
参    数:u16 wID                            [in]    u16
注    意:无
返 回 值:MtID
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline u8 CMtUtility::GetMtId(u16 wID)
{
    return LOBYTE(wID);
}

/*=============================================================================
函 数 名:GetwID
功    能:将TMt转化为u16
参    数:const TMt &tMt                     [in]    TMt
注    意:无
返 回 值:终端标识号
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline u16 CMtUtility::GetwID(const TMt &tMt)
{
    return MAKEWORD(tMt.GetMtId(), tMt.GetMcuId());
}

/*=============================================================================
函 数 名:GetwID
功    能:将McuID和MtID组合转化为u16
参    数:u8 byMcuId                         [in]    McuID
         u8 byMtId                          [in]    MtID
注    意:无
返 回 值:终端标识号
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline u16 CMtUtility::GetwID(u8 byMcuId, u8 byMtId)
{
    return MAKEWORD(byMtId, byMcuId);
}

/*=============================================================================
函 数 名:IsMcu
功    能:判断终端是否是MCU
参    数:const TMt &tMt                     [in]    终端
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMtUtility::IsMcu(const TMt &tMt)
{
    u8 byMtType = tMt.GetEqpType();

    if ( tMt.GetType() == TYPE_MT
        && (byMtType == MT_TYPE_MMCU
                || byMtType == MT_TYPE_SMCU
                || byMtType == MT_TYPE_LOCALMCU) )
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:IsSMcu
功    能:判断终端是否是下级MCU
参    数:const TMt &tMt                     [in]    终端
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMtUtility::IsSMcu(const TMt &tMt)
{
    if (tMt.GetType() == TYPE_MT && tMt.GetEqpType() == MT_TYPE_SMCU)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:IsMMcu
功    能:判断终端是否是上级MCU
参    数:const TMt &tMt                     [in]    终端
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMtUtility::IsMMcu(const TMt &tMt)
{
    if (tMt.GetType() == TYPE_MT && tMt.GetEqpType() == MT_TYPE_MMCU)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:IsLocalMcu
功    能:判断终端是否是本级MCU
参    数:const TMt &tMt                     [in]    终端
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/05/13  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMtUtility::IsLocalMcu(const TMt &tMt)
{
    if (tMt.GetType() == TYPE_MT && tMt.GetEqpType() == MT_TYPE_LOCALMCU)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*====================================================================
  函 数 名： IsSMt
  功    能： 判断是否是下级的终端
  算法实现： 认为除了上级和本级之外所有的终端都是下级的终端
			 P.S 算法高效,但是不准确,必须事先确定查询的终端是会议中的终端
  全局变量： 
  参    数： const TMt &tMt				[in]需要判断的Mt
             const TMt &tMMcu			[in]上级MCU
  返 回 值： inline BOOL32 
  --------------------------------------------------------------------
  修改记录：
  日  期	      版本		    修改人		走读人    修改内容
  2006/5/29      4.0		    刘瑞飞                   创建
======================================================================*/
inline BOOL32 CMtUtility::IsSMt( const TMt &tMt, const TMt &tMMcu )
{
	if ( tMt.IsLocal() )
	{
		return FALSE;
	}

	u8 byMcuId = tMt.GetMcuId();
	//判断是否是上级mcu下的终端 
	if ( byMcuId == tMMcu.GetMtId() )
	{
		return FALSE;
	}
	
	return TRUE;
}

/*====================================================================
  函 数 名： IsMMt
  功    能： 判断是否是上级的终端 
  算法实现： 高效但是不准确,必须由用户来确认终端在会议中
  全局变量： 
  参    数： const TMt &tMt				[in]需要判断的Mt
             const TMt &tMMcu			[in]上级MCU,如果没有是空值
  返 回 值： inline BOOL32 
  --------------------------------------------------------------------
  修改记录：
  日  期	      版本		    修改人		走读人    修改内容
  2006/5/29      4.0		    刘瑞飞                   创建
======================================================================*/
inline BOOL32 CMtUtility::IsMMt( const TMt &tMt, const TMt &tMMcu )
{
	if ( tMt.IsLocal() )
	{
		return FALSE;
	}

	u8 byMcuId = tMt.GetMcuId();
	if ( byMcuId != tMMcu.GetMtId() )
	{
		return FALSE;
	}
	return TRUE;
}


///////////////////////////////////////////////////////////////////////////////
// CBrdCfg

/*=============================================================================
函 数 名:operator=
功    能:赋值操作符
参    数:无
注    意:无
返 回 值:this
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/09/01  4.0     王昊    创建
=============================================================================*/
inline CBrdCfg& CBrdCfg::operator=(const TBrdCfgInfo &tBrdCfg)
{
    if ( this == &tBrdCfg )
    {
        return (*this);
    }

    memcpy( dynamic_cast<TBrdCfgInfo*>(this), &tBrdCfg, sizeof (TBrdCfgInfo) );
    return (*this);
}

///////////////////////////////////////////////////////////////////////////////
// CMt

/*=============================================================================
函 数 名:operator=
功    能:全部赋值
参    数:const CMt& cMt                     [in]    全部终端信息
注    意:无
返 回 值:this
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline CMt& CMt::operator=(const CMt &cMt)
{
    if (this == &cMt)
    {
        return (*this);
    }

    memcpy(this, &cMt, sizeof (CMt));
    return (*this);
}

/*=============================================================================
函 数 名:operator=
功    能:基本结构赋值
参    数:const TMt& tMt                     [in]    基本终端信息
注    意:无
返 回 值:this
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline CMt& CMt::operator=(const TMt &tMt)
{
    if (this == &tMt)
    {
        return (*this);
    }

    SetMt(tMt);
    return (*this);
}

/*=============================================================================
函 数 名:operator=
功    能:部分结构赋值
参    数:const TMtExt &tMtExt               [in]    部分终端信息
注    意:无
返 回 值:this
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline CMt& CMt::operator=(const TMtExt &tMtExt)
{
    m_tMtExt = tMtExt;
    SetMt(tMtExt);
    SyncAliasFromExt();

    return (*this);
}

/*=============================================================================
函 数 名:operator=
功    能:部分结构赋值
参    数:const TMtStatus &tMtStatus         [in]    部分终端信息
注    意:无
返 回 值:this
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/14  4.0     王昊    创建
=============================================================================*/
inline CMt& CMt::operator=(const TMtStatus &tMtStatus)
{
    SetMtStatus(tMtStatus);
    return (*this);
}

/*=============================================================================
函 数 名:operator==
功    能:比较操作符
参    数:const TMtStatus &tMtStatus         [in]    TMtStatus
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/27  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMt::operator==(const TMtStatus &tMtStatus) const
{
    if ( GetMcuId() == tMtStatus.GetMcuId()
        && GetMtId() == tMtStatus.GetMtId() )
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:operator==
功    能:比较操作符
参    数:const TMtExt &tMtExt               [in]    TMtExt
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/05/08  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMt::operator==(const TMtExt &tMtExt) const
{
    if ( GetMcuId() == tMtExt.GetMcuId()
        && GetMtId() == tMtExt.GetMtId() )
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:operator==
功    能:比较操作符
参    数:const TMt &tMt                     [in]    TMt
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/05/09  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMt::operator==(const TMt &tMt) const
{
    if ( (*dynamic_cast<TMt*>(const_cast<CMt*>(this))) == tMt)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:IsNull
功    能:判断终端是否为空
参    数:无
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/05/09  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMt::IsNull(void) const
{
    return dynamic_cast<TMt&>(const_cast<CMt&>(*this)).IsNull();
}

/*=============================================================================
函 数 名:GetwID
功    能:获取16位终端标识符
参    数:无
注    意:无
返 回 值:终端标识符
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline u16 CMt::GetwID(void) const
{
    return CMtUtility::GetwID(GetMcuId(), GetMtId());
}

/*=============================================================================
函 数 名:SetMt
功    能:设置TMt
参    数:const TMt &tMt                     [in]    TMt
注    意:无
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/26  4.0     王昊    创建
=============================================================================*/
inline void CMt::SetMt(const TMt &tMt)
{
    m_byMcuId = tMt.GetMcuId();
    m_byEqpId = tMt.GetMtId();
    m_byConfIdx = tMt.GetConfIdx();
    m_byConfDriId = tMt.GetDriId();
    m_byMainType = tMt.GetType();
    m_bySubType = tMt.GetMtType();

    m_tMtExt.SetMt(m_byMcuId, m_byEqpId, m_byConfDriId, m_byConfIdx);
    m_tMtExt.SetMtType(m_bySubType);
    m_tMtExt.SetType(m_byMainType);

    m_tMtStatus.SetMt(m_byMcuId, m_byEqpId, m_byConfDriId, m_byConfIdx);
    m_tMtStatus.SetMtType(m_bySubType);
    m_tMtStatus.SetType(m_byMainType);
}

/*=============================================================================
函 数 名:SetMtStatus
功    能:设置终端状态
参    数:const TMtStatus &tMtStatus         [in]    终端状态
注    意:无
返 回 值:现有m_tMtStatus与tMtStatus不一样:TRUE; 否则:FALSE
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/25  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMt::SetMtStatus(const TMtStatus &tMtStatus)
{
    BOOL32 bRet = (memcmp(&m_tMtStatus, &tMtStatus, sizeof (TMtStatus)) != 0);
    m_tMtStatus = tMtStatus;
    if (tMtStatus.m_tRecState.IsNoRecording())
    {
        ZeroMemory(&m_tRecEqp, sizeof (m_tRecEqp));
        ZeroMemory(&m_tRecProg, sizeof (m_tRecProg));
    }
    return bRet;
}

///////////////////////////////////////////////////////////////////////////////
// CSingleMcuInfo

/*=============================================================================
函 数 名:SetNull
功    能:清空信息列表
参    数:无
注    意:无
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/05/16  4.0     王昊    创建
=============================================================================*/
inline void CSingleMcuInfo::SetNull(void)
{
    m_byLockStatus = 0;
    ZeroMemory(&m_tMixParam, sizeof (m_tMixParam));
    ZeroMemory(&m_tMediaSrcMt, sizeof (m_tMediaSrcMt));
    m_tplMt.Clear();
}

/*=============================================================================
函 数 名:GetMt
功    能:获取终端
参    数:无
注    意:无
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/04/30  4.0     王昊    创建
=============================================================================*/
inline CMt& CSingleMcuInfo::GetMt(u16 wMtId) const
{
    s32 nSize = m_tplMt.Size();
    for (s32 nIndex = 0; nIndex < nSize; nIndex ++)
    {
        if (m_tplMt[nIndex].GetwID() == wMtId)
        {
            return m_tplMt[nIndex];
        }
    }

    return g_tNull.cNullMt;
}

///////////////////////////////////////////////////////////////////////////////
// CMcuTable

/*=============================================================================
函 数 名:SetMixParam
功    能:设置混音参数
参    数:u8 byMcuId                         [in]    McuId
         const TDiscussParam *ptMixParam    [in]    混音参数
注    意:不设置本级
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/13  4.0     王昊    创建
=============================================================================*/
inline void CMcuTable::SetMixParam(u8 byMcuId, const TMixParam *ptMixParam)
{
    s32 nIndex = McuID2TblIdx(byMcuId);
    if (nIndex == INDEX_ERR || nIndex == 0) //  超标或本级MCU
    {
        return;
    }

    // 混音状态完全由MtStatus控制   modified by WangLr on 2007-11-13
    /*
    if (ptMixParam == NULL || ptMixParam->m_byMixMode == mcuNoMix)
    {
        ZeroMemory(&m_acMcuInfo[nIndex].m_tMixParam, sizeof (TDiscussParam));
        TplArray<CMt> tplMt = m_acMcuInfo[nIndex].GetMtList();
        for (s32 nIdx = 0; nIdx < tplMt.Size(); nIdx ++)
        {
            tplMt[nIdx].SetStatusMix(FALSE);
        }
        m_acMcuInfo[nIndex].UpdateMtList(tplMt);
    }
    else
    {
        m_acMcuInfo[nIndex].m_tMixParam = *ptMixParam;
        if (ptMixParam->m_byMixMode == mcuPartMix)
        {
            TplArray<CMt> tplMt = m_acMcuInfo[nIndex].GetMtList();
            for (s32 nIdx = 0; nIdx < tplMt.Size(); nIdx ++)
            {
                tplMt[nIdx].SetStatusMix(m_acMcuInfo[nIndex].m_tMixParam.   \
                                         IsMtInMember(tplMt[nIdx]));
            }
            m_acMcuInfo[nIndex].UpdateMtList(tplMt);
        }
    }
    */
}

/*=============================================================================
函 数 名:GetMixParam
功    能:获取混音参数
参    数:u8 byMcuId                         [in]    McuId
注    意:不获取本级
返 回 值:混音参数
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/13  4.0     王昊    创建
=============================================================================*/
inline TMixParam& CMcuTable::GetMixParam(u8 byMcuId) const
{
    s32 nIndex = McuID2TblIdx(byMcuId);
    if (nIndex != INDEX_ERR && nIndex != 0)
    {
        return const_cast<TMixParam&>(m_acMcuInfo[nIndex].m_tMixParam);
    }
    else        //  超标或本级MCU
    {
        return g_tNull.cNullMixParam;
    }
}

/*=============================================================================
函 数 名:IsPartMix
功    能:是否部分混音
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2006/08/04  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMcuTable::IsPartMix(u8 byMcuId) const
{
    s32 nIndex = McuID2TblIdx(byMcuId);
    if (nIndex != INDEX_ERR && nIndex != 0)
    {
        return m_acMcuInfo[nIndex].IsPartMix();
    }
    else        //  超标或本级MCU
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:IsEntireMix
功    能:是否全体混音
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2006/08/04  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMcuTable::IsEntireMix(u8 byMcuId) const
{
    s32 nIndex = McuID2TblIdx(byMcuId);
    if (nIndex != INDEX_ERR && nIndex != 0)
    {
        return m_acMcuInfo[nIndex].IsEntireMix();
    }
    else        //  超标或本级MCU
    {
        return FALSE;
    }
}

/*=============================================================================
函 数 名:IsNoMix
功    能:是否没有混音
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2006/08/04  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMcuTable::IsNoMix(u8 byMcuId) const
{
    s32 nIndex = McuID2TblIdx(byMcuId);
    if (nIndex != INDEX_ERR && nIndex != 0)
    {
        return m_acMcuInfo[nIndex].IsNoMix();
    }
    else        //  超标或本级MCU
    {
        return TRUE;
    }
}

/*=============================================================================
函 数 名:IsMtInConf
功    能:终端是否在受邀列表中
参    数:const TMt &tMt                     [in]    终端基本结构
注    意:根据TConfAllMtInfo来判断
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/02  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CMcuTable::IsMtInConf(const TMt &tMt) const
{
    if (CMtUtility::IsLocalMcu(tMt) && m_tplMcuId.Size() > 1)       //  本级MCU
    {
        return TRUE;
    }

    return m_tConfAllMtInfo.MtInConf(tMt.GetMcuId(), tMt.GetMtId());
}

/*=============================================================================
函 数 名:SetNull
功    能:清空
参    数:无
注    意:无
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/03  4.0     王昊    创建
=============================================================================*/
inline void CMcuTable::SetNull(void)
{
    for (s32 nIndex = 0; nIndex < MAXNUM_SUB_MCU + 1; nIndex ++)
    {
        m_acMcuInfo[nIndex].SetNull();
    }

    memset(m_abyMcuMap, (u8)INDEX_ERR, sizeof(m_abyMcuMap));
    ZeroMemory(&m_tConfAllMtInfo,   sizeof (m_tConfAllMtInfo));
    ZeroMemory(m_abMcuInfoUsed, sizeof(m_abMcuInfoUsed) );

    m_tplMcuId.Clear();
    m_cLocalMcu.SetNull();

    m_dwLocalMcuIp = 0;
    m_byMcuUsedInfoPtr = 1;
}

/*=============================================================================
函 数 名:McuID2TblIdx
功    能:获取MCU号对应的CSingleMcu的下标索引
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:MCU索引, 找不到MCU则返回INDEX_ERR
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/05/30  4.0     王昊    创建
2006/03/27  4.0     顾振华  使用新的Map
=============================================================================*/
inline s32 CMcuTable::McuID2TblIdx(u8 byMcuId) const
{
    s32 nIndex = (byMcuId == LOCAL_MCUID ? 0 : byMcuId);
    return (m_abyMcuMap[nIndex] == (u8)INDEX_ERR ?
                (s32)INDEX_ERR : (s32)m_abyMcuMap[nIndex] );
}

/*=============================================================================
函 数 名:GetNextFreeListPtr
功    能:查找下一个可用的CSingleMcuInfo
参    数:
注    意:无
返 回 值:可用的索引, 没有可用则返回INDEX_ERR
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2006/03/27  4.0     顾振华  创建
=============================================================================*/
u8 CMcuTable::GetNextFreeListPtr()
{
    u8 byOldPtr = m_byMcuUsedInfoPtr;
    do
    {
        // 找到空闲
        if ( !m_abMcuInfoUsed[m_byMcuUsedInfoPtr] )
        {
            return m_byMcuUsedInfoPtr;
        }
        m_byMcuUsedInfoPtr ++;
        if (m_byMcuUsedInfoPtr > MAXNUM_SUB_MCU)
        {
            m_byMcuUsedInfoPtr = 1;
        }
    }
    while (m_byMcuUsedInfoPtr != byOldPtr); // 一圈都没找到
    
    return INDEX_ERR;
}

///////////////////////////////////////////////////////////////////////////////
// CConf

/*=============================================================================
函 数 名:SetNull
功    能:清空
参    数:无
注    意:无
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/03  4.0     王昊    创建
=============================================================================*/
inline void CConf::SetNull(void)
{
    ZeroMemory(dynamic_cast<TConfInfo*>(this),  sizeof (TConfInfo));
//    ZeroMemory(&m_tTwModule,                    sizeof (m_tTwModule));
//    ZeroMemory(&m_tVmpModule,                   sizeof (m_tVmpModule));
    ZeroMemory(m_abyLockUserName,               sizeof (m_abyLockUserName));
    ZeroMemory(&m_tRecEqp,                      sizeof (m_tRecEqp));
    ZeroMemory(&m_tPlayEqp,                     sizeof (m_tPlayEqp));

    m_dwGetInitValue    = 0;
    m_byLockBySelf      = 0;
    m_dwLockMcsIP       = 0;
    m_bPwdEntered       = FALSE;
    m_dwSN              = 0;
    m_dwLastRateReqTime = 0;

    m_cMcuTable.SetNull();
    m_cVcsConfStatus.RestoreStatus();
}

/*=============================================================================
函 数 名:GetMixParam
功    能:获取混音参数
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:混音参数
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/13  4.0     王昊    创建
=============================================================================*/
inline TMixParam& CConf::GetMixParam(u8 byMcuId) const
{
    if (byMcuId == LOCAL_MCUID)
    {
        return const_cast<TMixParam&>(m_tStatus.m_tMixParam);
    }
    else
    {
        return m_cMcuTable.GetMixParam(byMcuId);
    }
}

/*=============================================================================
函 数 名:IsConfEntireMix
功    能:指定MCU是否全体混音
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/13  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CConf::IsConfEntireMix(u8 byMcuId) const
{
    if (byMcuId == LOCAL_MCUID)
    {
        return m_tStatus.IsAutoMixing();
//        return (m_tStatus.m_tConfMode.IsDiscussMode()
//                && !m_tStatus.m_tConfMode.IsMixSpecMt());
    }
    else
    {
        return m_cMcuTable.IsEntireMix(byMcuId);
//        return (m_cMcuTable.GetMixParam(byMcuId).m_byMixMode == mcuWholeMix);
    }
}

/*=============================================================================
函 数 名:IsConfPartMix
功    能:指定MCU是否部分混音
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/06/13  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CConf::IsConfPartMix(u8 byMcuId) const
{
    if (byMcuId == LOCAL_MCUID)
    {
        return m_tStatus.IsSpecMixing();
//        return (m_tStatus.m_tConfMode.IsDiscussMode()
//                && m_tStatus.m_tConfMode.IsMixSpecMt());
    }
    else
    {
//        return (m_cMcuTable.GetMixParam(byMcuId).m_byMixMode == mcuPartMix);
        return m_cMcuTable.IsPartMix(byMcuId);
    }
}

/*=============================================================================
函 数 名:IsConfNoMix
功    能:指定MCU是否没有混音
参    数:u8 byMcuId                         [in]    McuId
注    意:无
返 回 值:BOOL
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2006/08/04  4.0     王昊    创建
=============================================================================*/
inline BOOL32 CConf::IsConfNoMix(u8 byMcuId) const
{
    if (byMcuId == LOCAL_MCUID)
    {
        return m_tStatus.IsNoMixing();
        //return ( ! m_tStatus.m_tConfMode.IsDiscussMode() );
    }
    else
    {
        return m_cMcuTable.IsNoMix(byMcuId);
    }
}

/*=============================================================================
函 数 名:SetNull
功    能:会议模板置空
参    数:无
注    意:无
返 回 值:无
-------------------------------------------------------------------------------
修改纪录:
日      期  版本    修改人  修改内容
2005/11/22  4.0     王昊    创建
=============================================================================*/
inline void CTemSchConf::SetNull(void)
{
    m_bExist = FALSE;
    ZeroMemory( dynamic_cast<TConfInfo*>(this), sizeof (TConfInfo) );    
    ZeroMemory( &m_tVmpModule,  sizeof (TVmpModule) );
    ZeroMemory( &m_tTWModules,  sizeof (TMultiTvWallModule) );
    m_tplMt.Clear();

    m_tplSubMcu.Clear();
    m_vctGroup.clear();
    m_tHdTvwall.SetNull();
    m_vctHduModChn.clear();

    m_wPollTime = 0;
}

#define INVALID_INDEX 0xFFFFFFFF

class CMcuAddrBook
{
public:
    // 初始化成部分值
    CMcuAddrBook() :m_tplEntry(128, 32),
                    m_tplGroup(16, 4)
	{		
	}
    ~CMcuAddrBook()
    {
        Clear();
    }
	
    /*=============================================================================
    函 数 名:Clear
    功    能:清空地址簿
    参    数:无
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/
	void Clear()
	{
		m_tplEntry.Clear();
		m_tplGroup.Clear();
	}

    /*=============================================================================
    函 数 名:AddEntry
    功    能:向地址簿添加条目
    参    数:TMcuAddrEntry& tEntry          [in]    要添加的条目
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/
	void AddEntry(TMcuAddrEntry& tEntry);

    /*=============================================================================
    函 数 名:DelEntry
    功    能:从地址簿删除条目
    参    数:u32 dwIndex                    [in]    欲删除条目的EntryIdx
    注    意:无
    返 回 值:TRUE为成功删除，FALSE没有找到
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/
	BOOL32 DelEntry(u32 dwIndex);
    
    /*=============================================================================
    函 数 名:ModifyEntry
    功    能:从地址簿修改条目
    参    数:TMcuAddrEntry& tEntry          [in]    欲修改的条目，根据其EntryIdx查找
    注    意:无
    返 回 值:TRUE为成功修改，FALSE没有找到
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/
	BOOL32 ModifyEntry(TMcuAddrEntry& tEntry);

    /*=============================================================================
    函 数 名:AddGroup
    功    能:向地址簿添加组
    参    数:TMcuAddrGroup& tGroup          [in]    要添加的组
    注    意:无
    返 回 值:无
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/
	void AddGroup(TMcuAddrGroup& tGroup);

    /*=============================================================================
    函 数 名:DelGroup
    功    能:从地址簿删除组
    参    数:u32 dwIndex                    [in]    欲删除组的EntryIdx
    注    意:无
    返 回 值:TRUE为成功删除，FALSE没有找到
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/    
	BOOL32 DelGroup(u32 dwIndex);

    /*=============================================================================
    函 数 名:ModifyGroup
    功    能:从地址簿修改组
    参    数:TMcuAddrGroup& tGroup          [in]    欲修改的组，根据其EntryIdx查找
    注    意:无
    返 回 值:TRUE为成功修改，FALSE没有找到
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/    
	BOOL32 ModifyGroup(TMcuAddrGroup& tGroup);

    /*=============================================================================
    函 数 名:AddEntryToGroup
    功    能:向地址簿组添加条目
    参    数:TMcuAddrGroup& tGroup          [in]    添加的条目信息，根据组EntryIdx查找
    注    意:无
    返 回 值:TRUE为成功添加，FALSE没有找到
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/   
	BOOL32 AddEntryToGroup(TMcuAddrGroup& tGroup);

    /*=============================================================================
    函 数 名:DelEntryFromGroup
    功    能:从地址簿组删除条目
    参    数:TMcuAddrGroup& tGroup          [in]    删除的条目信息，根据组EntryIdx查找
    注    意:无
    返 回 值:TRUE为成功添加，FALSE没有找到
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/   
	BOOL32 DelEntryFromGroup(TMcuAddrGroup& tGroup);

    /*=============================================================================
    函 数 名:GetEntryCount
    功    能:获取地址簿条目数
    参    数:
    注    意:无
    返 回 值:条目数量
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/  
	u32  GetEntryCount()
    {
        return m_tplEntry.Size();
    }

    /*=============================================================================
    函 数 名:GetGroupCount
    功    能:获取地址簿组数
    参    数:
    注    意:无
    返 回 值:条目数量
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/  
	u32  GetGroupCount()
    {
        return m_tplGroup.Size();
    }

    /*=============================================================================
    函 数 名:IsEntryExist
    功    能:判断地址簿条目是否存在，根据EntryIdx查找
    参    数:TMcuAddrEntry& tEntry        [in]    目标条目
    注    意:无
    返 回 值:TRUE存在，FALSE不存在
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
	BOOL32 IsEntryExist(TMcuAddrEntry& tEntry) ;

    /*=============================================================================
    函 数 名:IsGroupExist
    功    能:判断地址簿组是否存在，根据EntryIdx查找
    参    数:TMcuAddrGroup& tGroup        [in]    目标组  
    注    意:无
    返 回 值:TRUE存在，FALSE不存在
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
	BOOL32 IsGroupExist(TMcuAddrGroup& tGroup) ;

    /*=============================================================================
    函 数 名:IsEntryExistInGroup
    功    能:判断地址簿条目是否存在在组中，根据EntryIdx查找
    参    数:
    注    意:无
    返 回 值:TRUE存在，FALSE不存在
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
	BOOL32 IsEntryExistInGroup(TMcuAddrEntry& tEntry, TMcuAddrGroup& tGroup);

    /*=============================================================================
    函 数 名:GetEntryByIndex
    功    能:按照条目索引查找
    参    数:u32 dwIndex                    [in]    条目索引
    注    意:无
    返 回 值:TMcuAddrEntry，如果不存在，则EntryIdx为 INVALID_INDEX
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    TMcuAddrEntry GetEntryByIndex(u32 dwIndex);

    /*=============================================================================
    函 数 名:GetGroupByIndex
    功    能:按照条目索引查找
    参    数:u32 dwIndex                    [in]    组索引
    注    意:无
    返 回 值:TMcuAddrGroup，如果不存在，则EntryIdx为 INVALID_INDEX
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    TMcuAddrGroup GetGroupByIndex(u32 dwIndex);

    /*=============================================================================
    函 数 名:GetEntryByName
    功    能:按照条目名称查找
    参    数:LPCTSTR lpszName               [in]    条目名称
             TMcuAddrEntry* ptEntry         [out]   返回的条目
    注    意:无
    返 回 值:u32 条目所在的物理地址，如果没有找到返回 INVALID_INDEX
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    u32 GetEntryByName(LPCTSTR lpszName, TMcuAddrEntry* ptEntry);

    /*=============================================================================
    函 数 名:GetFirstEntry
    功    能:查找地址簿物理上第一个条目
    参    数:TMcuAddrEntry* ptEntry         [out] 结果条目
    注    意:无
    返 回 值:如果查找成功返回0(物理上第一个)，ptEntry 被填充
             否则返回INVALID_INDEX，结果EntryIdx为 INVALID_INDEX             
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    u32 GetFirstEntry(TMcuAddrEntry* ptEntry);

    /*=============================================================================
    函 数 名:GetNextEntry
    功    能:根据用户要求查找物理上第dwCurIndex+1开始的dwCount个条目
    参    数:u32 dwCurIndex                 [in]  开始条目的物理位置，不包括本位置的条目
             TMcuAddrEntry* ptEntryTable    [out] 结果条目表，用于填充结果
             u32& dwCount                   [in/out] 请求的条目数量，同时返回结果被实际填充的数量
    注    意:无
    返 回 值:u32 如果能填充1个或以上，则返回最后一个条目的物理位置；
                     ptEntryTable 被填充，dwCount 返回实际填充数量
                 否则返回INVALID_INDEX，dwCount 返回 0          
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    u32 GetNextEntry(u32 dwCurIndex, TMcuAddrEntry* ptEntryTable, u32& dwCount);

    /*=============================================================================
    函 数 名:GetFirstGroup
    功    能:查找地址簿物理上第一个组
    参    数:TMcuAddrGroup* ptGroup         [out] 结果组
    注    意:无
    返 回 值:如果查找成功返回0(物理上第一个)，ptGroup 被填充
             否则返回INVALID_INDEX，结果EntryIdx为 INVALID_INDEX             
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    u32 GetFirstGroup(TMcuAddrGroup* ptGroup);

    /*=============================================================================
    函 数 名:GetNextGroup
    功    能:根据用户要求查找物理上第dwCurIndex+1开始的dwCount个组
    参    数:u32 dwCurIndex                 [in]  开始组的物理位置，不包括本位置的组
             TMcuAddrEntry* ptEntryTable    [out] 结果组表，用于填充结果
             u32& dwCount                   [in/out] 请求的组数量，同时返回结果被实际填充的数量
    注    意:无
    返 回 值:u32 如果能填充1个或以上，则返回最后一个组的物理位置；
                     ptEntryTable 被填充，dwCount 返回实际填充数量
                 否则返回INVALID_INDEX，dwCount 返回 0          
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2006/02/23  4.0     顾振华  创建
    =============================================================================*/ 
    u32 GetNextGroup(u32 dwCurIndex, TMcuAddrGroup* ptGroupTable, u32& dwCount);

    // 调试打印信息
    void PrintInfo();
	
public:
	TplArray<TMcuAddrEntry> m_tplEntry;
	TplArray<TMcuAddrGroup> m_tplGroup;
};

// 组呼组的信息
typedef struct tagCallGroupInfo
{
    tagCallGroupInfo()
    {
        ZeroMemory( this, sizeof(this) );
    }

    s8     m_achGroupName[MAX_VCSGROUPNAMELEN]; // 组呼组名;
    vector<TMt> m_vctMts;       //组内含有的终端  

}TCallGroupInfo, *PTCallGroupInfo;

//隐藏终端信息
typedef struct tagHideMtInfo 
{
public:
    tagHideMtInfo( u32 dwIP = 0, const char* strName = _T("") )
    {
        m_dwMtIP = dwIP;
        SetMtName( strName );
    }
    tagHideMtInfo( const tagHideMtInfo& tMtInfo )
    {
//         m_dwMtIP = tMtInfo.m_dwMtIP;
//         memcpy( m_strMtName, tMtInfo.m_strMtName, MAX_VCSGROUPNAMELEN );
        if ( this == &tMtInfo )
        {
            return ;
        } 
        *this = tMtInfo;
    }
    ~tagHideMtInfo(){}

    void SetIP( u32 dwIP ){ m_dwMtIP = dwIP; }
    u32 GetIP(){ return  m_dwMtIP; }

    void SetMtName( const char* pstrName ) { strcpy( m_strMtName, pstrName ); }
    const char* GetMtName(){ return m_strMtName; }
    
private:
    u32 m_dwMtIP;     //主机序
    char m_strMtName[MAX_VCSGROUPNAMELEN];

}THideMtInfo, *PTHideMtInfo;

#endif      //  _MCSSTRUCT_20050422_H_